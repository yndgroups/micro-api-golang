syntax = "proto3";

package shopping_admin;

option go_package = "build/shopping_admin";
import "protos/global/global.proto";

message ProductSku {
  // 主键id
  string skuId = 1;  // @gotags: gorm:"primary_key;<-:create"
  // 商品ID
  string productId = 2;  // @gotags: gorm:"<-"
  // 商品sku名称
  string sukName = 3;  // @gotags: gorm:"<-"
  // 属性对应的库存
  int64 stock = 4;  // @gotags: gorm:"<-"
  // 销量
  int64 sales = 5;  // @gotags: gorm:"<-"
  // 属性金额
  double price = 6;  // @gotags: gorm:"<-"
  // 图片
  string image = 7;  // @gotags: gorm:"<-"
  // 商品编码
  string sn = 8;  // @gotags: gorm:"<-"
  // 成本价
  double cost = 9;  // @gotags: gorm:"<-"
  // 商品条码
  string barCode = 10;  // @gotags: gorm:"<-"
  // 市场价
  double marketPrice = 11;  // @gotags: gorm:"<-"
  // 会员专享价
  double vipPrice = 12;  // @gotags: gorm:"<-"
  // 重量
  double weight = 13;  // @gotags: gorm:"<-"
  // 体积
  double volume = 14;  // @gotags: gorm:"<-"
  // 一级返佣
  double brokerage = 15;  // @gotags: gorm:"<-"
  // 二级返佣
  double brokerageTwo = 16;  // @gotags: gorm:"<-"
  // 活动类型 (0:商品 1:秒杀 2:砍价 3:拼团)
  int64 type = 17;  // @gotags: gorm:"<-"
  // 活动限购数量
  int64 quota = 18;  // @gotags: gorm:"<-"
  // 活动限购数量显示
  int64 quotaShow = 19;  // @gotags: gorm:"<-"
  // 优惠券id
  string couponId = 20;  // @gotags: gorm:"<-"
  // 删除状态
  bool delStatus = 21;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 22;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 23;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 24;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 25;  // @gotags: gorm:"->" swaggerignore:"true"
}

message ProductSkuListVo {
  // 主键id
  string skuId = 1;  // @gotags: gorm:"primary_key;<-:create"
  // 商品ID
  string productId = 2;  // @gotags: gorm:"<-"
  // 商品sku名称
  string sukName = 3;  // @gotags: gorm:"<-"
  // 属性对应的库存
  int64 stock = 4;  // @gotags: gorm:"<-"
  // 销量
  int64 sales = 5;  // @gotags: gorm:"<-"
  // 属性金额
  double price = 6;  // @gotags: gorm:"<-"
  // 图片
  string image = 7;  // @gotags: gorm:"<-"
  // 商品编码
  string sn = 8;  // @gotags: gorm:"<-"
  // 成本价
  double cost = 9;  // @gotags: gorm:"<-"
  // 商品条码
  string barCode = 10;  // @gotags: gorm:"<-"
  // 市场价
  double marketPrice = 11;  // @gotags: gorm:"<-"
  // 会员专享价
  double vipPrice = 12;  // @gotags: gorm:"<-"
  // 重量
  double weight = 13;  // @gotags: gorm:"<-"
  // 体积
  double volume = 14;  // @gotags: gorm:"<-"
  // 一级返佣
  double brokerage = 15;  // @gotags: gorm:"<-"
  // 二级返佣
  double brokerageTwo = 16;  // @gotags: gorm:"<-"
  // 活动类型 (0:商品 1:秒杀 2:砍价 3:拼团)
  int64 type = 17;  // @gotags: gorm:"<-"
  // 活动限购数量
  int64 quota = 18;  // @gotags: gorm:"<-"
  // 活动限购数量显示
  int64 quotaShow = 19;  // @gotags: gorm:"<-"
  // 优惠券id
  string couponId = 20;  // @gotags: gorm:"<-"
}

message ProductSkuParam {
}

message ProductSkuIds {
  repeated string id = 1;
  string userId = 2;
}

// 分页查询加权参数
message ProductSkuPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;
  // 分页长度
  int64 pageSize = 2;
  // 查询参数
  ProductSkuParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"
}

// 返回结果
message ProductSkuResponse {
  int64 count = 1;  // 获取数据数量
  string Msg = 2;  // 错误信息
  ProductSku detail = 3;  // 详情
  repeated ProductSku list = 4;  // 列表
}

// 业务实现
service ProductSkuService {
  // 新增
  rpc Create(ProductSku) returns (ProductSkuResponse);

  // 修改
  rpc Update(ProductSku) returns (ProductSkuResponse);

  // 删除
  rpc Delete(ProductSkuIds) returns (ProductSkuResponse);

  // 查询 详情
  rpc FindById(ProductSkuIds) returns (ProductSkuResponse);

  // 查询 分页
  rpc FindPageList(ProductSkuPageAuthQuery) returns (ProductSkuResponse);
}
