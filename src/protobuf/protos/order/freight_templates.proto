syntax = "proto3";

package order;

option go_package = "build/order";

import "protos/global/global.proto";

// 运费模板
message FreightTemplates {
  // 模板id(新增时不传值，修改时必须传值)
  string tempId = 1;  // @gotags: `gorm:"primary_key;<-:create"`
  // 模板名称
  string name = 2;  // @gotags: `gorm:"<-" validate:"required"`
  // 计费方式 1、DHL快递收费 2 ups快递收费 3、FEDEX快递收费 4、EMS快递收费
  int64 billingMethods = 3;  // @gotags: `gorm:"<-" validate:"required,min=1,max=4" minimum:"1" maximum:"4"`
  // 指定包邮(0:包邮 1:不包邮)
  int64 appoint = 4;  // @gotags: `gorm:"<-" validate:"required,min=0,max=1" minimum:"0" maximum:"1" default:"0"`
  // 指定不送达 (0:送达 1:不送达)
  int64 noDelivery = 5;  // @gotags: `gorm:"<-" validate:"required,min=0,max=1" minimum:"0" maximum:"1" default:"0"`
  // 排序
  int64 sortBy = 6;  // @gotags: `gorm:"<-"`
  // 删除状态
  bool delStatus = 7;  // @gotags: `gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"`
  // 创建人
  string createBy = 8;  // @gotags: `gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"`
  // 修改人
  string updateBy = 9;  // @gotags: `gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"`
  // 创建时间
  string createTime = 10;  // @gotags: `gorm:"->" swaggerignore:"true"`
  // 修改时间
  string updateTime = 11;  // @gotags: `gorm:"->" swaggerignore:"true"`
}

message FreightTemplatesListVo {
  // 模板id(新增时不传值，修改时必须传值)
  string tempId = 1;  // @gotags: `gorm:"primary_key;<-:create"`

  // 模板名称
  string name = 2;  // @gotags: `gorm:"<-" validate:"required"`

  // 计费方式 1、DHL快递收费 2 ups快递收费 3、FEDEX快递收费 4、EMS快递收费
  int64 billingMethods = 3;  // @gotags: `json:"billingMethods" gorm:"<-" validate:"required,min=1,max=4" minimum:"1" maximum:"4"`

  // 计费方式名称
  string billingMethodsName = 4;

  // 是否包邮(0:包邮 1:不包邮)
  int64 appoint = 5;  // @gotags: `json:"appoint" gorm:"<-" validate:"required,min=0,max=1" minimum:"0" maximum:"1" default:"0"`

  // 是否包邮
  string appointName = 6;

  // 指定不送达 (0:送达 1:不送达)
  int64 noDelivery = 7;  // @gotags: `json:"noDelivery"  gorm:"<-" validate:"required,min=0,max=1" minimum:"0" maximum:"1" default:"0"`

  // 指定不送达名称
  string noDeliveryName = 8;

  // 排序
  int64 sortBy = 9;  // @gotags: `gorm:"<-"`

  // 删除状态
  bool delStatus = 10;  // @gotags: `gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"`
}

message FreightTemplateIds {
  repeated string tempId = 1;
  string userId = 2;
}

message FreightTemplatesPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;  //  @gotags: `validate:"required,min=1" example:"1"`
  // 分页长度
  int64 pageSize = 2;  //  @gotags: `validate:"required,min=10,max=100" example:"10"`
  // 查询调教
  message QueryParams {
    string name = 1;
  }
  // 查询参数
  QueryParams params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"`
}

message FreightTemplatesResponse {
  int64 count = 1;  // 数据量
  string Msg = 2;  // 错误信息
  FreightTemplates detail = 3;  // 详情
  repeated FreightTemplatesListVo list = 4;  // 列表
}

// 免费模板
service FreightTemplatesService {
  // Create 创建模板
  rpc Create(FreightTemplates) returns (FreightTemplatesResponse);

  // Update 修改模板
  rpc Update(FreightTemplates) returns (FreightTemplatesResponse);

  // Delete 删除
  rpc Delete(FreightTemplateIds) returns (FreightTemplatesResponse);

  // 查询分页
  rpc FindPageList(FreightTemplatesPageAuthQuery) returns (FreightTemplatesResponse);

  // 查询详情
  rpc FindById(FreightTemplateIds) returns (FreightTemplatesResponse);
}
