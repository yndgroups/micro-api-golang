syntax = "proto3";

package shopping_client;

option go_package = "build/shopping_client";
import "protos/global/global.proto";

// Business 商家信息
message Business {
  // 删除状态
  bool delStatus = 1;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 2;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 3;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 4;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 5;  // @gotags: gorm:"->" swaggerignore:"true"
}

message BusinessParam {
}

message BusinessIds {
  repeated string id = 1;
  string userId = 2;
}

// 分页查询加权参数
message BusinessPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;
  // 分页长度
  int64 pageSize = 2;
  // 查询参数
  BusinessParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"`
}

// 返回结果
message BusinessResponse {
  int64 count = 1;  // 获取数据数量
  string Msg = 2;  // 错误信息
  Business detail = 3;  // 详情
  repeated Business list = 4;  // 列表
}

// 业务实现
service BusinessService {
  // 新增
  rpc Create(Business) returns (BusinessResponse);

  // 修改
  rpc Update(Business) returns (BusinessResponse);

  // 删除
  rpc Delete(BusinessIds) returns (BusinessResponse);

  // 查询 详情
  rpc FindById(BusinessIds) returns (BusinessResponse);

  // 查询 分页
  rpc FindPageList(BusinessPageAuthQuery) returns (BusinessResponse);
}
