syntax = "proto3";

package common;

option go_package = "build/common";
import "protos/global/global.proto";

// UserAddress 用户收货地址
message UserAddress {
  // 收货地址id(新增的时候不用传参数，传了也没用，但是修改的时候必须传入正确id)
  string addressId = 1;  // @gotags: gorm:"primary_key;<-:create"
  // 地址编码
  string areaCode = 2;  // @gotags: gorm:"<-" validate:"required"
  // 标注(1:公司 2:家)
  int64 noteType = 3;  // @gotags: gorm:"<-"
  // 是否默认收货地址(0:否[默认] 1:是)
  int64 isDefault = 4;  // @gotags: gorm:"<-"
  // 详细地址
  string detail = 5;  // @gotags: gorm:"<-" validate:"required"
  // 联系人姓名
  string realName = 6;  // @gotags: gorm:"<-" validate:"required"
  // 联系人电话
  string phone = 7;  // @gotags: gorm:"<-" validate:"required"
  // 邮政编码
  string postCode = 8;  // @gotags: gorm:"<-"
  // 删除状态
  bool delStatus = 9;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 10;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 11;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 12;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 13;  // @gotags: gorm:"->" swaggerignore:"true"
}

message UserAddressParam {
}

message UserAddressIds {
  repeated string addressIds = 1;
  string userId = 2;
}

// 分页查询加权参数
message UserAddressPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;
  // 分页长度
  int64 pageSize = 2;
  // 查询参数
  UserAddressParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;
}

// 返回结果
message UserAddressResponse {
  int64 count = 1;  // 获取数据数量
  string Msg = 2;  // 错误信息
  UserAddress detail = 3;  // 详情
  repeated UserAddress list = 4;  // 列表
}

// 业务实现
service UserAddressService {
  // 新增用户地址
  rpc Create(UserAddress) returns (UserAddressResponse);

  // 修改用户地址
  rpc Update(UserAddress) returns (UserAddressResponse);

  // 删除用户地址
  rpc Delete(UserAddressIds) returns (UserAddressResponse);

  // 查询用户地址
  rpc FindById(UserAddressIds) returns (UserAddressResponse);

  // 查询用户地址分页
  rpc FindPageList(UserAddressPageAuthQuery) returns (UserAddressResponse);

  // 查询用户下的收货地址
  rpc FindList(UserAddressIds) returns (UserAddressResponse);
}
