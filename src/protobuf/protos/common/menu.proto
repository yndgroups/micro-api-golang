syntax = "proto3";

package common;

option go_package = "build/common";
import "protos/global/global.proto";

// Menu 菜单
message Menu {
  // 菜单id
  string menuId = 1;  // @gotags: gorm:"primary_key;<-:create"
  // '菜单父id(一级菜单父id为1, 默认为1）
  string parentId = 2;  // @gotags: gorm:"<-:create"
  // 菜单图标
  string icon = 3;  // @gotags: gorm:"<-" validate:"required"
  // 菜单名称
  string name = 4;  // @gotags: gorm:"<-" validate:"required"
  // 菜单地址(作为菜单是必填 按钮是非必填)
  string url = 5;  // @gotags: gorm:"<-"
  // 权限标识
  string powerSign = 6;  // @gotags: gorm:"<-" validate:"required"
  // 是否是菜单（0:是按钮[默认] 1:是菜单）
  int64 type = 7;  // @gotags: gorm:"<-"  validate:"required"
  // 排序
  int64 sortBy = 8;  // @gotags: gorm:"<-"
  // 应用id
  string appId = 9;  // @gotags: gorm:"<-"
  // 删除状态
  bool delStatus = 10;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 11;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 12;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 13;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 14;  // @gotags: gorm:"->" swaggerignore:"true"
  // 子集菜单
  repeated Menu children = 15;  // @gotags `json:"children" gorm:"-"`
}

message MenuParam {}

// 菜单id信息
message MenuIds {
  repeated string menuIds = 1;
  string userId = 2;
}

// 分页查询加权参数
message MenuPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;
  // 分页长度
  int64 pageSize = 2;
  // 查询参数
  MenuParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"`
}

// 返回结果
message MenuResponse {
  // 获取数据数量
  int64 count = 1;
  // 错误信息
  string Msg = 2;
  // 详情
  Menu detail = 3;
  // 列表
  repeated Menu list = 4;
  // 授权的菜单id
  repeated string roleMenuIds = 5;
  // 授权权限值(可能包括菜单权限值和功能权限值)
  string powerSign = 6;
}

// 角色菜单关联id
message RoleMenuParam {
  // 应用id
  string appId = 1;
  // 用户id
  string UserId = 2;
  // 角色id集合
  repeated string roleIds = 3;
}

// 业务实现
service MenuService {
  // 新增菜单
  rpc Create(Menu) returns (MenuResponse);

  // 修改菜单
  rpc Update(Menu) returns (MenuResponse);

  // 修改菜单
  rpc Delete(MenuIds) returns (MenuResponse);

  // 查询应用下的所有菜单
  rpc FindAll(RoleMenuParam) returns (MenuResponse);

  // 根据角色Id查询菜单信息
  rpc FindByRoleIds(RoleMenuParam) returns (MenuResponse);

  // 查询用户♾️权限的菜单
  rpc FindTreeList(RoleMenuParam) returns (MenuResponse);
}
