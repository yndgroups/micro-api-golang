syntax = "proto3";

package common;

option go_package = "build/common";
import "protos/global/global.proto";

// Agreement 协议
message Agreement {
  // 协议id
  string agreeId = 1;  // @gotags: gorm:"primary_key;<-:create" json:"agreeId"
  // 协议类型  1：会员协议,2:代理商协议
  uint64 type = 2;  // @gotags: gorm:"<-" valid:"required"
  // 协议名称
  string title = 3;  // @gotags: gorm:"<-" valid:"required"
  // 协议内容
  string content = 4;  // @gotags: gorm:"<-" valid:"required"
  // 排序
  uint64 sortBy = 5;
  // 1：显示：0：不显示
  uint64 display = 6;  // @gotags: gorm:"<-"  valid:"required"
  // 删除状态
  bool delStatus = 7;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 8;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 9;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 10;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 11;  // @gotags: gorm:"->" swaggerignore:"true"
}

// AgreementDetailVo 协议详情
message AgreementDetailVo {
  // 协议id
  string agreeId = 1;  // @gotags: json:"agreeId"
  // 协议类型
  uint64 type = 2;  // @gotags: json:"type"
  // 协议类型名称 1：会员协议 2:代理商协议
  string typeName = 3;  // @gotags: json:"typeName"
  // 协议名称
  string title = 4;  //  @gotags: json:"title"
  // 协议内容
  string content = 5;  // @gotags: json:"content"
  // 排序
  uint64 sortBy = 6;  // @gotags: json:"sortBy"
  // 显示状态名称
  uint64 display = 7;  // @gotags: json:"display"
  // 显示状态名称 1：显示：0：不显示
  string displayName = 8;  // @gotags: json:"displayName"
  // 创建时间
  string createTime = 9;  // @gotags: json:"createTime"
  // 修改时间
  string updateTime = 10;  // @gotags: json:"updateTime"
}

// AgreementParam
message AgreementParam {
  // 协议名称
  string title = 3;
  // 协议内容
  string content = 4;
}

// 用户id集合
message AgreementIds {
  // 用户id
  repeated string agreeIds = 1;
  string userId = 2;
}

// UserPageQuery 用户分页查询
message AgreementPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;  // @gotags: `json:"pageIndex" default:"1"`
  // 分页长度
  int64 pageSize = 2;  // @gotags: `json:"pageSize" default:"10"`
  // 查询参数
  AgreementParam params = 3;  // @gotags: `json:"params"`
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"
}

// 用户数据
message AgreementResponse {
  int64 count = 1;  // 获取数据数量
  string Msg = 2;  // 错误信息
  AgreementDetailVo detail = 3;  // 详情
  repeated Agreement list = 4;  // 列表
}

service AgreementService {
  
  // 新增协议
  rpc Create(Agreement) returns (AgreementResponse);

  // 修改协议
  rpc Update(Agreement) returns (AgreementResponse);

  // 删除协议
  rpc Delete(AgreementIds) returns (AgreementResponse);

  // 查询协议详情
  rpc FindById(AgreementIds) returns (AgreementResponse);

  // 查询协议分页
  rpc FindPageList(AgreementPageAuthQuery) returns (AgreementResponse);

}
