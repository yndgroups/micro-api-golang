syntax = "proto3";

package common;

option go_package = "build/common";
import "protos/global/global.proto";

message Role {
  // 角色id
  string roleId = 1;  // @gotags: gorm:"primary_key;<-:create"
  // 应用id
  string appId = 2;  // @gotags:  validate:"required"
  // 角色名称
  string name = 3;  // @gotags:  validate:"required"
  // 角色介绍
  string introduce = 4;  // @gotags:  validate:"required"
  // 角色唯一标识（不能更改）
  int64 uniqueIdentification = 5;
  // 排序
  int64 sortBy = 6;
  // 删除状态
  bool delStatus = 7;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 8;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 9;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 10;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 11;  // @gotags: gorm:"->" swaggerignore:"true"
}

message RoleParam {
  // 角色名称
  string name = 1;
  // 应用id必须传参数
  string appId = 2;  // @gotags: swaggerignore:"true"
}

message RoleAuthParam {
  // 应用id必须传参数
  string appId = 1;
  // 用户id
  string userId = 2;
}

message RoleIds {
  repeated string roleId = 1;
  string userId = 2;
}

// 分页查询加权参数
message RolePageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;  // @gotags: validate:"required,min=1" example:"1"
  // 分页长度
  int64 pageSize = 2;  // @gotags: validate:"required,min=10,max=100" example:"10"
  // 查询参数
  RoleParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"`
}

// 返回结果
message RoleResponse {
  // 获取数据数量
  int64 count = 1;
  // 错误信息
  string Msg = 2;
  // 详情
  Role detail = 3;
  // 列表
  repeated Role list = 4;
  // 角色id集合
  repeated string roleIds = 5;
}

// 业务实现
service RoleService {
  // 新增角色
  rpc Create(Role) returns (RoleResponse);

  // 修改角色
  rpc Update(Role) returns (RoleResponse);

  // 删除角色
  rpc Delete(RoleIds) returns (RoleResponse);

  // 查询角色详情
  rpc FindById(RoleIds) returns (RoleResponse);

  // 查询角色列表
  rpc FindPageList(RolePageAuthQuery) returns (RoleResponse);

  // 查询角色列表及传入用户id所对于下的应用下的角色列表
  rpc FindAuthRoleListByUserId(RoleAuthParam) returns (RoleResponse);
}
