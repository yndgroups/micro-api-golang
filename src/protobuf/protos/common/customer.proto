syntax = "proto3";

package common;

option go_package = "build/common";
import "protos/global/global.proto";

message Customer {
  // 删除状态
  bool delStatus = 1;  // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
  // 创建人
  string createBy = 2;  // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 修改人
  string updateBy = 3;  // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
  // 创建时间
  string createTime = 4;  // @gotags: gorm:"->" swaggerignore:"true"
  // 修改时间
  string updateTime = 5;  // @gotags: gorm:"->" swaggerignore:"true"
}

message CustomerParam {
}

message CustomerIds {
  repeated string id = 1;
  string userId = 2;
}

// 分页查询加权参数
message CustomerPageAuthQuery {
  // 分页索引
  int64 pageIndex = 1;
  // 分页长度
  int64 pageSize = 2;
  // 查询参数
  CustomerParam params = 3;
  // 用户登录授权信息
  global.Auth auth = 4;  // @gotags: swaggerignore:"true"`
}

// 返回结果
message CustomerResponse {
  int64 count = 1;  // 获取数据数量
  string Msg = 2;  // 错误信息
  Customer detail = 3;  // 详情
  repeated Customer list = 4;  // 列表
}

// 业务实现
service CustomerService {
  // 新增客户
  rpc Create(Customer) returns (CustomerResponse);

  // 修改客户
  rpc Update(Customer) returns (CustomerResponse);

  // 删除客户
  rpc Delete(CustomerIds) returns (CustomerResponse);

  // 查询客户详情
  rpc FindById(CustomerIds) returns (CustomerResponse);

  // 查询客户分页
  rpc FindPageList(CustomerPageAuthQuery) returns (CustomerResponse);
}
