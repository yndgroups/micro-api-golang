// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: protos/common/user.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	global "protobuf/build/global"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty" gorm:"primary_key;<-:create"` // @gotags: gorm:"primary_key;<-:create"
	// 用户名
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"` // @gotags gorm:"<-"
	// 用户密码
	UserPassword string `protobuf:"bytes,3,opt,name=userPassword,proto3" json:"userPassword,omitempty"` // @gotags gorm:"<-"
	// 加密盐
	Salt string `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"` // @gotags gorm:"<-"
	// 用户电话
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	// 用户邮箱登录
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// 微信OpenId
	OpenId string `protobuf:"bytes,7,opt,name=openId,proto3" json:"openId,omitempty"`
	// 禁用原因
	ReasonsProhibition string `protobuf:"bytes,8,opt,name=reasonsProhibition,proto3" json:"reasonsProhibition,omitempty"`
	// 帐号类型（1：个人账户，2：企业）
	AccountType int64 `protobuf:"varint,9,opt,name=accountType,proto3" json:"accountType,omitempty"`
	// 状态(1:启用(审核通过)[默认] 2:禁用 3:待审核)
	Status int64 `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	// 来源分类(1:后台端 2:前端 3: 微信公众号 4:微信小程序）
	RegType int64 `protobuf:"varint,11,opt,name=regType,proto3" json:"regType,omitempty"`
	// 帐号来源某个应用的appId
	SourceId string `protobuf:"bytes,12,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	// 创建人
	CreateBy string `protobuf:"bytes,13,opt,name=createBy,proto3" json:"createBy,omitempty" gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 修改人
	UpdateBy string `protobuf:"bytes,14,opt,name=updateBy,proto3" json:"updateBy,omitempty" gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *User) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *User) GetReasonsProhibition() string {
	if x != nil {
		return x.ReasonsProhibition
	}
	return ""
}

func (x *User) GetAccountType() int64 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *User) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User) GetRegType() int64 {
	if x != nil {
		return x.RegType
	}
	return 0
}

func (x *User) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *User) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *User) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

// 授权参数
type PowerParma struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色id
	RoleId string `protobuf:"bytes,5,opt,name=roleId,proto3" json:"roleId,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,6,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *PowerParma) Reset() {
	*x = PowerParma{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerParma) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerParma) ProtoMessage() {}

func (x *PowerParma) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerParma.ProtoReflect.Descriptor instead.
func (*PowerParma) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{1}
}

func (x *PowerParma) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *PowerParma) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type CreateUserDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       *User       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	PowerParma *PowerParma `protobuf:"bytes,2,opt,name=powerParma,proto3" json:"powerParma,omitempty"`
}

func (x *CreateUserDTO) Reset() {
	*x = CreateUserDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDTO) ProtoMessage() {}

func (x *CreateUserDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDTO.ProtoReflect.Descriptor instead.
func (*CreateUserDTO) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserDTO) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserDTO) GetPowerParma() *PowerParma {
	if x != nil {
		return x.PowerParma
	}
	return nil
}

// 用户id集合
type UserIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId []string `protobuf:"bytes,1,rep,name=userId,proto3" json:"userId,omitempty"`
	// 操作人id
	OperatorUserid string `protobuf:"bytes,2,opt,name=operatorUserid,proto3" json:"operatorUserid,omitempty"`
}

func (x *UserIds) Reset() {
	*x = UserIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIds) ProtoMessage() {}

func (x *UserIds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIds.ProtoReflect.Descriptor instead.
func (*UserIds) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserIds) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UserIds) GetOperatorUserid() string {
	if x != nil {
		return x.OperatorUserid
	}
	return ""
}

// UserParams 查询条件
type UserParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名
	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	// 电话号码
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	// 邮箱
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// 注册类型 1:后台端 2:前端 3: 微信公众号 4:微信小程序
	RegType int64 `protobuf:"varint,4,opt,name=regType,proto3" json:"regType,omitempty"`
	// openId
	OpenId string `protobuf:"bytes,5,opt,name=openId,proto3" json:"openId,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,6,opt,name=appId,proto3" json:"appId,omitempty"`
	// 用户id
	UserId string `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserParam) Reset() {
	*x = UserParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserParam) ProtoMessage() {}

func (x *UserParam) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserParam.ProtoReflect.Descriptor instead.
func (*UserParam) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserParam) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserParam) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserParam) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserParam) GetRegType() int64 {
	if x != nil {
		return x.RegType
	}
	return 0
}

func (x *UserParam) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserParam) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UserParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// @name test
type UserPageAuthQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页索引
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty" validate:"required,min=1" example:"1"` // @gotags: validate:"required,min=1" example:"1"
	// 分页长度
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty" validate:"required,min=10,max=100" example:"10"` // @gotags:  validate:"required,min=10,max=100" example:"10"
	// 查询参数
	Params *UserParam `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// 用户登录授权信息
	Auth *global.Auth `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty" swaggerignore:"true"` // @gotags: swaggerignore:"true"`
}

func (x *UserPageAuthQuery) Reset() {
	*x = UserPageAuthQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPageAuthQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPageAuthQuery) ProtoMessage() {}

func (x *UserPageAuthQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPageAuthQuery.ProtoReflect.Descriptor instead.
func (*UserPageAuthQuery) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserPageAuthQuery) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *UserPageAuthQuery) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserPageAuthQuery) GetParams() *UserParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *UserPageAuthQuery) GetAuth() *global.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 用户列表信息
type UserListVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty" gorm:"primary_key;<-:create"` // @gotags: gorm:"primary_key;<-:create"
	// 用户名
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"` // @gotags gorm:"<-"
	// 加密盐
	Salt string `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"` // @gotags gorm:"<-"
	// 用户电话
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	// 用户邮箱登录
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// 微信OpenId
	OpenId string `protobuf:"bytes,7,opt,name=openId,proto3" json:"openId,omitempty"`
	// 禁用原因
	ReasonsProhibition string `protobuf:"bytes,8,opt,name=reasonsProhibition,proto3" json:"reasonsProhibition,omitempty"`
	// 账号类型
	AccountType int64 `protobuf:"varint,9,opt,name=accountType,proto3" json:"accountType,omitempty"`
	// 账号状态
	Status int64 `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	// 帐号来源分类（1：后台端：2前端：3: 微信）
	RegType int64 `protobuf:"varint,11,opt,name=regType,proto3" json:"regType,omitempty"`
	// 帐号来源某个应用的appId
	SourceId string `protobuf:"bytes,12,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	// 删除状态
	DelStatus bool `protobuf:"varint,13,opt,name=delStatus,proto3" json:"delStatus,omitempty" gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"` // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
	// 创建人
	CreateBy string `protobuf:"bytes,14,opt,name=createBy,proto3" json:"createBy,omitempty" gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 修改人
	UpdateBy string `protobuf:"bytes,15,opt,name=updateBy,proto3" json:"updateBy,omitempty" gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 创建时间
	CreateTime string `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
	// 修改时间
	UpdateTime string `protobuf:"bytes,17,opt,name=updateTime,proto3" json:"updateTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
	// 存储菜单权限值
	AuthorizedValue string `protobuf:"bytes,18,opt,name=authorizedValue,proto3" json:"authorizedValue,omitempty" gorm:"-"` // @gotags: gorm:"-"
}

func (x *UserListVo) Reset() {
	*x = UserListVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListVo) ProtoMessage() {}

func (x *UserListVo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListVo.ProtoReflect.Descriptor instead.
func (*UserListVo) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserListVo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserListVo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserListVo) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *UserListVo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserListVo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListVo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserListVo) GetReasonsProhibition() string {
	if x != nil {
		return x.ReasonsProhibition
	}
	return ""
}

func (x *UserListVo) GetAccountType() int64 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *UserListVo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserListVo) GetRegType() int64 {
	if x != nil {
		return x.RegType
	}
	return 0
}

func (x *UserListVo) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *UserListVo) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *UserListVo) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserListVo) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserListVo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserListVo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserListVo) GetAuthorizedValue() string {
	if x != nil {
		return x.AuthorizedValue
	}
	return ""
}

// 用户详情
type UserBaseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	// 用户密码
	UserPassword string `protobuf:"bytes,3,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	// 加密盐
	Salt string `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`
	// 用户电话
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	// 用户邮箱登录
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// 微信OpenId
	OpenId string `protobuf:"bytes,7,opt,name=openId,proto3" json:"openId,omitempty"`
	// 禁用原因
	ReasonsProhibition string `protobuf:"bytes,8,opt,name=reasonsProhibition,proto3" json:"reasonsProhibition,omitempty"`
	// 帐号类型（1：个人账户，2：企业）
	AccountType int64 `protobuf:"varint,9,opt,name=accountType,proto3" json:"accountType,omitempty"`
	// 状态(1:启用(审核通过)[默认] 2:禁用 3:待审核)
	Status int64 `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	// 来源分类(1:后台端 2:前端 3: 微信公众号 4:微信小程序）
	RegType int64 `protobuf:"varint,11,opt,name=regType,proto3" json:"regType,omitempty"`
	// 帐号来源某个应用的appId
	SourceId string `protobuf:"bytes,12,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	// 删除状态
	DelStatus bool `protobuf:"varint,13,opt,name=delStatus,proto3" json:"delStatus,omitempty"`
	// 创建人
	CreateBy string `protobuf:"bytes,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	// 修改人
	UpdateBy string `protobuf:"bytes,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 修改时间
	UpdateTime string `protobuf:"bytes,19,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	// 角色唯一标识
	UniqueIdentification string `protobuf:"bytes,20,opt,name=uniqueIdentification,proto3" json:"uniqueIdentification,omitempty"`
}

func (x *UserBaseDetail) Reset() {
	*x = UserBaseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBaseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBaseDetail) ProtoMessage() {}

func (x *UserBaseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBaseDetail.ProtoReflect.Descriptor instead.
func (*UserBaseDetail) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserBaseDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserBaseDetail) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserBaseDetail) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *UserBaseDetail) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *UserBaseDetail) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserBaseDetail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserBaseDetail) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserBaseDetail) GetReasonsProhibition() string {
	if x != nil {
		return x.ReasonsProhibition
	}
	return ""
}

func (x *UserBaseDetail) GetAccountType() int64 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *UserBaseDetail) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserBaseDetail) GetRegType() int64 {
	if x != nil {
		return x.RegType
	}
	return 0
}

func (x *UserBaseDetail) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *UserBaseDetail) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *UserBaseDetail) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserBaseDetail) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserBaseDetail) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserBaseDetail) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserBaseDetail) GetUniqueIdentification() string {
	if x != nil {
		return x.UniqueIdentification
	}
	return ""
}

// 用户数据
type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据量
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 错误信息
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// 详情
	Detail *UserBaseDetail `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	// 列表
	List []*UserListVo `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	// 角色列表
	Roles []*Role `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	// 角色相关权限值
	PowerSign string `protobuf:"bytes,6,opt,name=powerSign,proto3" json:"powerSign,omitempty"`
	// 用户余额
	Balance string `protobuf:"bytes,7,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_protos_common_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserResponse) GetDetail() *UserBaseDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *UserResponse) GetList() []*UserListVo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserResponse) GetPowerSign() string {
	if x != nil {
		return x.PowerSign
	}
	return ""
}

func (x *UserResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

var File_protos_common_user_proto protoreflect.FileDescriptor

var file_protos_common_user_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x68,
	0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x6d, 0x61,
	0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x6d, 0x61, 0x22, 0x49, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9a, 0x01,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xf8, 0x03, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaa, 0x04, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f,
	0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xea, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32,
	0xc5, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x54, 0x4f,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x1a,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_common_user_proto_rawDescOnce sync.Once
	file_protos_common_user_proto_rawDescData = file_protos_common_user_proto_rawDesc
)

func file_protos_common_user_proto_rawDescGZIP() []byte {
	file_protos_common_user_proto_rawDescOnce.Do(func() {
		file_protos_common_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_common_user_proto_rawDescData)
	})
	return file_protos_common_user_proto_rawDescData
}

var file_protos_common_user_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protos_common_user_proto_goTypes = []interface{}{
	(*User)(nil),              // 0: common.User
	(*PowerParma)(nil),        // 1: common.PowerParma
	(*CreateUserDTO)(nil),     // 2: common.CreateUserDTO
	(*UserIds)(nil),           // 3: common.UserIds
	(*UserParam)(nil),         // 4: common.UserParam
	(*UserPageAuthQuery)(nil), // 5: common.UserPageAuthQuery
	(*UserListVo)(nil),        // 6: common.UserListVo
	(*UserBaseDetail)(nil),    // 7: common.UserBaseDetail
	(*UserResponse)(nil),      // 8: common.UserResponse
	(*global.Auth)(nil),       // 9: global.Auth
	(*Role)(nil),              // 10: common.Role
}
var file_protos_common_user_proto_depIdxs = []int32{
	0,  // 0: common.CreateUserDTO.user:type_name -> common.User
	1,  // 1: common.CreateUserDTO.powerParma:type_name -> common.PowerParma
	4,  // 2: common.UserPageAuthQuery.params:type_name -> common.UserParam
	9,  // 3: common.UserPageAuthQuery.auth:type_name -> global.Auth
	7,  // 4: common.UserResponse.detail:type_name -> common.UserBaseDetail
	6,  // 5: common.UserResponse.list:type_name -> common.UserListVo
	10, // 6: common.UserResponse.roles:type_name -> common.Role
	2,  // 7: common.UserService.Create:input_type -> common.CreateUserDTO
	0,  // 8: common.UserService.Update:input_type -> common.User
	3,  // 9: common.UserService.Delete:input_type -> common.UserIds
	3,  // 10: common.UserService.FindById:input_type -> common.UserIds
	3,  // 11: common.UserService.FindBalance:input_type -> common.UserIds
	5,  // 12: common.UserService.FindPageList:input_type -> common.UserPageAuthQuery
	4,  // 13: common.UserService.FindByUserParam:input_type -> common.UserParam
	4,  // 14: common.UserService.FindPermissions:input_type -> common.UserParam
	8,  // 15: common.UserService.Create:output_type -> common.UserResponse
	8,  // 16: common.UserService.Update:output_type -> common.UserResponse
	8,  // 17: common.UserService.Delete:output_type -> common.UserResponse
	8,  // 18: common.UserService.FindById:output_type -> common.UserResponse
	8,  // 19: common.UserService.FindBalance:output_type -> common.UserResponse
	8,  // 20: common.UserService.FindPageList:output_type -> common.UserResponse
	8,  // 21: common.UserService.FindByUserParam:output_type -> common.UserResponse
	8,  // 22: common.UserService.FindPermissions:output_type -> common.UserResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protos_common_user_proto_init() }
func file_protos_common_user_proto_init() {
	if File_protos_common_user_proto != nil {
		return
	}
	file_protos_common_role_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_common_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerParma); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPageAuthQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBaseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_common_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_common_user_proto_goTypes,
		DependencyIndexes: file_protos_common_user_proto_depIdxs,
		MessageInfos:      file_protos_common_user_proto_msgTypes,
	}.Build()
	File_protos_common_user_proto = out.File
	file_protos_common_user_proto_rawDesc = nil
	file_protos_common_user_proto_goTypes = nil
	file_protos_common_user_proto_depIdxs = nil
}
