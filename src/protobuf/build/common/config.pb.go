// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: protos/common/config.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	global "protobuf/build/global"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 配置id
	ConfId string `protobuf:"bytes,1,opt,name=confId,proto3" json:"confId" gorm:"primary_key;<-:create"` // @gotags: gorm:"primary_key;<-:create" json:"confId"
	// 配置类型: 1小程序 2公众号
	ConfType int64 `protobuf:"varint,2,opt,name=confType,proto3" json:"confType"` // @gotags: json:"confType"
	// 应用id
	AppId string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId"` // @gotags: json:"appId"
	// 外部来源id
	OutsideAppId string `protobuf:"bytes,4,opt,name=outsideAppId,proto3" json:"outsideAppId"` // @gotags: json:"outsideAppId"
	// 外部来源名称
	OutsideAppName string `protobuf:"bytes,5,opt,name=outsideAppName,proto3" json:"outsideAppName"` // @gotags: json:"outsideAppName"
	// 外部来源秘钥
	OutsideAppSecret string `protobuf:"bytes,6,opt,name=outsideAppSecret,proto3" json:"outsideAppSecret"` // @gotags: json:"outsideAppSecret"
	// 支付商户号
	MchId string `protobuf:"bytes,7,opt,name=mchId,proto3" json:"mchId"` // @gotags: json:"mchId"
	// 私人密钥
	PaterNerKey string `protobuf:"bytes,8,opt,name=paterNerKey,proto3" json:"paterNerKey"` // @gotags: json:"paterNerKey"
	// 电话号码
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone"` // @gotags: json:"phone"
	// 邮箱
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email"` // @gotags: json:"email"
	// 同步回调地址
	ReturnUrl string `protobuf:"bytes,11,opt,name=returnUrl,proto3" json:"returnUrl"` // @gotags: json:"returnUrl"
	// 异步回调地址
	NotifyUrl string `protobuf:"bytes,12,opt,name=notifyUrl,proto3" json:"notifyUrl"` // @gotags: json:"notifyUrl"
	// 公众号用于调用微信JS接口的临时票据
	JsApiTicket string `protobuf:"bytes,13,opt,name=jsApiTicket,proto3" json:"jsApiTicket"` // @gotags: json:"jsApiTicket"
	// Token可以由开发者任意填写，用作生成签名（该Token会配置在服务器中和接口URL中包含的Token进行比对，从而验证安全性）。
	Token string `protobuf:"bytes,14,opt,name=token,proto3" json:"token"` // @gotags: json:"token"
	// 默认支付金额
	Amount float64 `protobuf:"fixed64,15,opt,name=amount,proto3" json:"amount"` // @gotags: json:"amount"
	// 消息格式化（比如：JSON）
	MsgDataFormat string `protobuf:"bytes,16,opt,name=msgDataFormat,proto3" json:"msgDataFormat"` // @gotags: json:"msgDataFormat"
	// 商户证书的证书序列号
	SerialNo string `protobuf:"bytes,17,opt,name=serialNo,proto3" json:"serialNo"` // @gotags: json:"serialNo"
	// apiV2Key，商户平台获取
	ApiV2Key string `protobuf:"bytes,19,opt,name=apiV2Key,proto3" json:"apiV2Key"` // @gotags: json:"apiV2Key"
	// apiV3Key，商户平台获取
	ApiV3Key string `protobuf:"bytes,20,opt,name=apiV3Key,proto3" json:"apiV3Key"` // @gotags: json:"apiV3Key"
	// 私钥
	PrivateKey string `protobuf:"bytes,21,opt,name=privateKey,proto3" json:"PrivateKey"` // @gotags: json:"PrivateKey"
	// EncodingAESKey由开发者手动填写或随机生成，将用作消息体加解密密钥。（43位）
	AesKey string `protobuf:"bytes,22,opt,name=aesKey,proto3" json:"aesKey"` // @gotags: json:"aesKey"
	// 时间戳
	Timestamp int64 `protobuf:"varint,23,opt,name=timestamp,proto3" json:"timestamp"` // @gotags: json:"timestamp"
	// 删除状态
	DelStatus bool `protobuf:"varint,24,opt,name=delStatus,proto3" json:"delStatus,omitempty" gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"` // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
	// 创建人
	CreateBy string `protobuf:"bytes,25,opt,name=createBy,proto3" json:"createBy,omitempty" gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 修改人
	UpdateBy string `protobuf:"bytes,26,opt,name=updateBy,proto3" json:"updateBy,omitempty" gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 创建时间
	CreateTime string `protobuf:"bytes,27,opt,name=createTime,proto3" json:"createTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
	// 修改时间
	UpdateTime string `protobuf:"bytes,28,opt,name=updateTime,proto3" json:"updateTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetConfId() string {
	if x != nil {
		return x.ConfId
	}
	return ""
}

func (x *Config) GetConfType() int64 {
	if x != nil {
		return x.ConfType
	}
	return 0
}

func (x *Config) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Config) GetOutsideAppId() string {
	if x != nil {
		return x.OutsideAppId
	}
	return ""
}

func (x *Config) GetOutsideAppName() string {
	if x != nil {
		return x.OutsideAppName
	}
	return ""
}

func (x *Config) GetOutsideAppSecret() string {
	if x != nil {
		return x.OutsideAppSecret
	}
	return ""
}

func (x *Config) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *Config) GetPaterNerKey() string {
	if x != nil {
		return x.PaterNerKey
	}
	return ""
}

func (x *Config) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Config) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Config) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *Config) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *Config) GetJsApiTicket() string {
	if x != nil {
		return x.JsApiTicket
	}
	return ""
}

func (x *Config) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Config) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Config) GetMsgDataFormat() string {
	if x != nil {
		return x.MsgDataFormat
	}
	return ""
}

func (x *Config) GetSerialNo() string {
	if x != nil {
		return x.SerialNo
	}
	return ""
}

func (x *Config) GetApiV2Key() string {
	if x != nil {
		return x.ApiV2Key
	}
	return ""
}

func (x *Config) GetApiV3Key() string {
	if x != nil {
		return x.ApiV3Key
	}
	return ""
}

func (x *Config) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *Config) GetAesKey() string {
	if x != nil {
		return x.AesKey
	}
	return ""
}

func (x *Config) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Config) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *Config) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *Config) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *Config) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Config) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ConfigExpand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 配置id
	ConfId string `protobuf:"bytes,1,opt,name=confId,proto3" json:"confId,omitempty"`
	// 配置类型 1小程序 2公众号
	ConfType int64 `protobuf:"varint,2,opt,name=confType,proto3" json:"confType,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	// 来源id
	OutsideAppId string `protobuf:"bytes,4,opt,name=outsideAppId,proto3" json:"outsideAppId,omitempty"`
	// 应用名称
	OutsideAppName string `protobuf:"bytes,5,opt,name=outsideAppName,proto3" json:"outsideAppName,omitempty"`
	// 秘钥
	OutsideAppSecret string `protobuf:"bytes,6,opt,name=outsideAppSecret,proto3" json:"outsideAppSecret,omitempty"`
	// 支付商户号
	MchId string `protobuf:"bytes,7,opt,name=mchId,proto3" json:"mchId,omitempty"`
	// 私人密钥
	PaterNerKey string `protobuf:"bytes,8,opt,name=paterNerKey,proto3" json:"paterNerKey,omitempty"`
	// 电话号码
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	// 邮箱
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	// 同步回调地址
	ReturnUrl string `protobuf:"bytes,11,opt,name=returnUrl,proto3" json:"returnUrl,omitempty"`
	// 异步回调地址
	NotifyUrl string `protobuf:"bytes,12,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	// 公众号用于调用微信JS接口的临时票据
	JsApiTicket string `protobuf:"bytes,13,opt,name=jsApiTicket,proto3" json:"jsApiTicket,omitempty"`
	// Token可以由开发者任意填写，用作生成签名（该Token会配置在服务器中和接口URL中包含的Token进行比对，从而验证安全性）。
	Token string `protobuf:"bytes,14,opt,name=token,proto3" json:"token,omitempty"`
	// 默认支付金额
	Amount float64 `protobuf:"fixed64,15,opt,name=amount,proto3" json:"amount,omitempty"`
	// 消息格式化（比如：JSON）
	MsgDataFormat string `protobuf:"bytes,16,opt,name=msgDataFormat,proto3" json:"msgDataFormat,omitempty"`
	// 商户证书的证书序列号
	SerialNo string `protobuf:"bytes,17,opt,name=serialNo,proto3" json:"serialNo,omitempty"`
	// apiV2Key，商户平台获取
	ApiV2Key string `protobuf:"bytes,19,opt,name=apiV2Key,proto3" json:"apiV2Key,omitempty"`
	// apiV3Key，商户平台获取
	ApiV3Key string `protobuf:"bytes,20,opt,name=apiV3Key,proto3" json:"apiV3Key,omitempty"`
	// 私钥
	PrivateKey string `protobuf:"bytes,21,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	// EncodingAESKey由开发者手动填写或随机生成，将用作消息体加解密密钥。（43位）
	AesKey string `protobuf:"bytes,22,opt,name=aesKey,proto3" json:"aesKey,omitempty"`
	// 时间戳
	Timestamp int64 `protobuf:"varint,23,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ConfigExpand) Reset() {
	*x = ConfigExpand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigExpand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigExpand) ProtoMessage() {}

func (x *ConfigExpand) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigExpand.ProtoReflect.Descriptor instead.
func (*ConfigExpand) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigExpand) GetConfId() string {
	if x != nil {
		return x.ConfId
	}
	return ""
}

func (x *ConfigExpand) GetConfType() int64 {
	if x != nil {
		return x.ConfType
	}
	return 0
}

func (x *ConfigExpand) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ConfigExpand) GetOutsideAppId() string {
	if x != nil {
		return x.OutsideAppId
	}
	return ""
}

func (x *ConfigExpand) GetOutsideAppName() string {
	if x != nil {
		return x.OutsideAppName
	}
	return ""
}

func (x *ConfigExpand) GetOutsideAppSecret() string {
	if x != nil {
		return x.OutsideAppSecret
	}
	return ""
}

func (x *ConfigExpand) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *ConfigExpand) GetPaterNerKey() string {
	if x != nil {
		return x.PaterNerKey
	}
	return ""
}

func (x *ConfigExpand) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ConfigExpand) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ConfigExpand) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ConfigExpand) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *ConfigExpand) GetJsApiTicket() string {
	if x != nil {
		return x.JsApiTicket
	}
	return ""
}

func (x *ConfigExpand) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConfigExpand) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ConfigExpand) GetMsgDataFormat() string {
	if x != nil {
		return x.MsgDataFormat
	}
	return ""
}

func (x *ConfigExpand) GetSerialNo() string {
	if x != nil {
		return x.SerialNo
	}
	return ""
}

func (x *ConfigExpand) GetApiV2Key() string {
	if x != nil {
		return x.ApiV2Key
	}
	return ""
}

func (x *ConfigExpand) GetApiV3Key() string {
	if x != nil {
		return x.ApiV3Key
	}
	return ""
}

func (x *ConfigExpand) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ConfigExpand) GetAesKey() string {
	if x != nil {
		return x.AesKey
	}
	return ""
}

func (x *ConfigExpand) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 配置id
	ConfIds string `protobuf:"bytes,1,opt,name=confIds,proto3" json:"confIds,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ConfigParam) Reset() {
	*x = ConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigParam) ProtoMessage() {}

func (x *ConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigParam.ProtoReflect.Descriptor instead.
func (*ConfigParam) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigParam) GetConfIds() string {
	if x != nil {
		return x.ConfIds
	}
	return ""
}

func (x *ConfigParam) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ConfigIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfIds  []string `protobuf:"bytes,1,rep,name=confIds,proto3" json:"confIds,omitempty"`
	StoreIds []string `protobuf:"bytes,2,rep,name=storeIds,proto3" json:"storeIds,omitempty"`
	UserId   string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	AppId    string   `protobuf:"bytes,4,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ConfigIds) Reset() {
	*x = ConfigIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigIds) ProtoMessage() {}

func (x *ConfigIds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigIds.ProtoReflect.Descriptor instead.
func (*ConfigIds) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigIds) GetConfIds() []string {
	if x != nil {
		return x.ConfIds
	}
	return nil
}

func (x *ConfigIds) GetStoreIds() []string {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

func (x *ConfigIds) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfigIds) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// 分页查询加权参数
type ConfigPageAuthQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页索引
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 分页长度
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 查询参数
	Params *ConfigParam `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// 用户登录授权信息
	Auth *global.Auth `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty" swaggerignore:"true"` // @gotags: swaggerignore:"true"`
}

func (x *ConfigPageAuthQuery) Reset() {
	*x = ConfigPageAuthQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigPageAuthQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPageAuthQuery) ProtoMessage() {}

func (x *ConfigPageAuthQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPageAuthQuery.ProtoReflect.Descriptor instead.
func (*ConfigPageAuthQuery) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigPageAuthQuery) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ConfigPageAuthQuery) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConfigPageAuthQuery) GetParams() *ConfigParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ConfigPageAuthQuery) GetAuth() *global.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 返回结果
type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int64     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`  // 获取数据数量
	Msg    string    `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`       // 错误信息
	Detail *Config   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"` // 详情
	List   []*Config `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`     // 列表
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_common_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_common_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_protos_common_config_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ConfigResponse) GetDetail() *Config {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *ConfigResponse) GetList() []*Config {
	if x != nil {
		return x.List
	}
	return nil
}

var File_protos_common_config_proto protoreflect.FileDescriptor

var file_protos_common_config_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa0, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x65, 0x72, 0x4e,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x6a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x56, 0x32, 0x4b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x56, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65,
	0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x90, 0x05, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x73,
	0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6a, 0x73, 0x41, 0x70, 0x69, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6a, 0x73, 0x41,
	0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x56,
	0x32, 0x4b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x56,
	0x32, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xea,
	0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64,
	0x73, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x1a, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protos_common_config_proto_rawDescOnce sync.Once
	file_protos_common_config_proto_rawDescData = file_protos_common_config_proto_rawDesc
)

func file_protos_common_config_proto_rawDescGZIP() []byte {
	file_protos_common_config_proto_rawDescOnce.Do(func() {
		file_protos_common_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_common_config_proto_rawDescData)
	})
	return file_protos_common_config_proto_rawDescData
}

var file_protos_common_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_common_config_proto_goTypes = []interface{}{
	(*Config)(nil),              // 0: common.Config
	(*ConfigExpand)(nil),        // 1: common.ConfigExpand
	(*ConfigParam)(nil),         // 2: common.ConfigParam
	(*ConfigIds)(nil),           // 3: common.ConfigIds
	(*ConfigPageAuthQuery)(nil), // 4: common.ConfigPageAuthQuery
	(*ConfigResponse)(nil),      // 5: common.ConfigResponse
	(*global.Auth)(nil),         // 6: global.Auth
}
var file_protos_common_config_proto_depIdxs = []int32{
	2,  // 0: common.ConfigPageAuthQuery.params:type_name -> common.ConfigParam
	6,  // 1: common.ConfigPageAuthQuery.auth:type_name -> global.Auth
	0,  // 2: common.ConfigResponse.detail:type_name -> common.Config
	0,  // 3: common.ConfigResponse.list:type_name -> common.Config
	0,  // 4: common.ConfigService.Create:input_type -> common.Config
	0,  // 5: common.ConfigService.Update:input_type -> common.Config
	3,  // 6: common.ConfigService.Delete:input_type -> common.ConfigIds
	3,  // 7: common.ConfigService.FindById:input_type -> common.ConfigIds
	3,  // 8: common.ConfigService.FindByConfigExpandParam:input_type -> common.ConfigIds
	4,  // 9: common.ConfigService.FindPageList:input_type -> common.ConfigPageAuthQuery
	5,  // 10: common.ConfigService.Create:output_type -> common.ConfigResponse
	5,  // 11: common.ConfigService.Update:output_type -> common.ConfigResponse
	5,  // 12: common.ConfigService.Delete:output_type -> common.ConfigResponse
	5,  // 13: common.ConfigService.FindById:output_type -> common.ConfigResponse
	5,  // 14: common.ConfigService.FindByConfigExpandParam:output_type -> common.ConfigResponse
	5,  // 15: common.ConfigService.FindPageList:output_type -> common.ConfigResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_protos_common_config_proto_init() }
func file_protos_common_config_proto_init() {
	if File_protos_common_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_common_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigExpand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigPageAuthQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_common_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_common_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_common_config_proto_goTypes,
		DependencyIndexes: file_protos_common_config_proto_depIdxs,
		MessageInfos:      file_protos_common_config_proto_msgTypes,
	}.Build()
	File_protos_common_config_proto = out.File
	file_protos_common_config_proto_rawDesc = nil
	file_protos_common_config_proto_goTypes = nil
	file_protos_common_config_proto_depIdxs = nil
}
