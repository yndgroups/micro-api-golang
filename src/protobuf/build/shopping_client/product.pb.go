// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: protos/shopping_client/product.proto

package shopping_client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	global "protobuf/build/global"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Product 产品
type ProductListVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品id
	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty" gorm:"primary_key;<-:create;column:product_id"` // @gotags: `gorm:"primary_key;<-:create;column:product_id"`
	// 分类id
	CategoryId string `protobuf:"bytes,2,opt,name=categoryId,proto3" json:"categoryId,omitempty" validate:"required" gorm:"<-;column:category_id"` // @gotags: `validate:"required" gorm:"<-;column:category_id"`
	// 商品名称
	ProductName string `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty" validate:"required" gorm:"<-;column:product_name"` // @gotags: `validate:"required"  gorm:"<-;column:product_name"`
	// 关键字
	Keyword string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty" validate:"required" gorm:"<-;column:keyword"` // @gotags: `validate:"required" gorm:"<-;column:keyword"`
	// 商品简介
	Introduction string `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty" validate:"required" gorm:"<-;column:introduction"` // @gotags: `validate:"required" gorm:"<-;column:introduction"`
	// 商品价格(单规格时必填)
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty" gorm:"<-;column:price"` // @gotags: gorm:"<-;column:price"`
	// 成本价(单规格时必填)
	CostPrice float64 `protobuf:"fixed64,7,opt,name=costPrice,proto3" json:"costPrice,omitempty" gorm:"<-;column:cost_price"` // @gotags: gorm:"<-;column:cost_price"`
	// 会员价格(单规格时必填)
	VipPrice float64 `protobuf:"fixed64,8,opt,name=vipPrice,proto3" json:"vipPrice,omitempty" gorm:"<-;column:vip_price"` // @gotags: gorm:"<-;column:vip_price"`
	// 市场价(单规格时必填)
	MarketPrice float64 `protobuf:"fixed64,9,opt,name=marketPrice,proto3" json:"marketPrice,omitempty" gorm:"<-;column:market_price"` // @gotags:  gorm:"<-;column:market_price"`
	// 商品图片
	Image string `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty" validate:"required" gorm:"<-;column:image"` // @gotags: `validate:"required" gorm:"<-;column:image"`
	// 轮播图
	SliderImage string `protobuf:"bytes,11,opt,name=sliderImage,proto3" json:"sliderImage,omitempty" validate:"required" gorm:"<-;column:slider_image"` // @gotags:`validate:"required" gorm:"<-;column:slider_image"`
	// 推荐图
	RecommendImage string `protobuf:"bytes,12,opt,name=recommendImage,proto3" json:"recommendImage" validate:"required" gorm:"<-;column:recommend_image"` // @gotags: `validate:"required" json:"recommendImage" gorm:"<-;column:recommend_image"`
	// 库存
	Stock uint64 `protobuf:"varint,13,opt,name=stock,proto3" json:"stock" validate:"required" gorm:"<-;column:stock"` // @gotags:`validate:"required" json:"stock" gorm:"<-;column:stock"`
	// 库存预警
	StockWarning uint64 `protobuf:"varint,14,opt,name=stockWarning,proto3" json:"stockWarning" validate:"required" gorm:"<-;column:stock_warning"` // @gotags: `validate:"required" json:"stockWarning" gorm:"<-;column:stock_warning"`
	// 单位
	UnitName string `protobuf:"bytes,15,opt,name=unitName,proto3" json:"unitName" validate:"required" gorm:"<-;column:unit_name"` // @gotags:`validate:"required" json:"unitName" gorm:"<-;column:unit_name"`
	// 运费模板ID
	FreightTempId string `protobuf:"bytes,16,opt,name=freightTempId,proto3" json:"tempId" validate:"required" gorm:"<-;column:temp_id"` // @gotags: `validate:"required" json:"tempId" gorm:"<-;column:temp_id"`
	// 规格(0:单 1:多)
	SpecType int64 `protobuf:"varint,17,opt,name=specType,proto3" json:"specType" validate:"required" gorm:"<-;column:spec_type"` // @gotags:`validate:"required" json:"specType" gorm:"<-;column:spec_type"`
	// 上架状态（0：未上架，1：上架）
	IsDisplay int64 `protobuf:"varint,18,opt,name=isDisplay,proto3" json:"isDisplay" validate:"required" gorm:"<-;column:is_display"` // @gotags: `validate:"required" json:"isDisplay" gorm:"<-;column:is_display"`
	// 商品是否是虚拟商品
	IsVirtual int64 `protobuf:"varint,19,opt,name=isVirtual,proto3" json:"isVirtual" validate:"required" gorm:"<-;column:is_virtual"` // @gotags:`validate:"required" json:"isVirtual" gorm:"<-;column:is_virtual"`
	// 品牌id
	BrandId string `protobuf:"bytes,20,opt,name=brandId,proto3" json:"brandId" gorm:"<-;column:brand_id"` // @gotags:`json:"brandId" gorm:"<-;column:brand_id"`
	// 虚拟商品类型
	VirtualType int64 `protobuf:"varint,21,opt,name=virtualType,proto3" json:"virtualType" gorm:"<-;column:virtual_type"` // @gotags: `json:"virtualType" gorm:"<-;column:virtual_type"`
	// 虚拟销量
	VirtualSales int64 `protobuf:"varint,22,opt,name=virtualSales,proto3" json:"virtualSales" swaggerignore:"true" gorm:"<-;column:virtual_sales"` // @gotags:`json:"virtualSales"  swaggerignore:"true" gorm:"<-;column:virtual_sales"`
	// 是否开启限购
	IsLimit int64 `protobuf:"varint,23,opt,name=isLimit,proto3" json:"isLimit" validate:"required" gorm:"<-;column:is_limit"` // @gotags: `validate:"required" json:"isLimit" gorm:"<-;column:is_limit"`
	// 限购类型(1:单次限购 2:永久限购)
	LimitType int64 `protobuf:"varint,24,opt,name=limitType,proto3" json:"limitType" gorm:"<-;column:limit_type"` // @gotags:`json:"limitType" gorm:"<-;column:limit_type"`
	// 限购数量
	LimitNum int64 `protobuf:"varint,25,opt,name=limitNum,proto3" json:"limitNum" gorm:"<-;column:limit_num"` // @gotags: 7`json:"limitNum" gorm:"<-;column:limit_num"`
	// 商品详情
	Content string `protobuf:"bytes,26,opt,name=content,proto3" json:"content" validate:"required" gorm:"-"` // @gotags:`validate:"required" json:"content" gorm:"-"`
	// 商品唯一编号
	Sn string `protobuf:"bytes,27,opt,name=sn,proto3" json:"sn,omitempty" gorm:"<-;column:sn"` // @gotags: gorm:"<-;column:sn"`
	// 浏览量
	Views int64 `protobuf:"varint,28,opt,name=views,proto3" json:"views,omitempty" swaggerignore:"true" gorm:"-"` // @gotags: swaggerignore:"true" gorm:"-"`
	// 商品条码（条形码）
	BarCode string `protobuf:"bytes,29,opt,name=barCode,proto3" json:"barCode,omitempty" gorm:"<-;column:bar_code"` // @gotags: gorm:"<-;column:bar_code"`
	// 商户id(0为超级员创建 非0时为商户)
	MerId int64 `protobuf:"varint,30,opt,name=merId,proto3" json:"merId,omitempty" gorm:"<-;column:mer_id"` // @gotags: gorm:"<-;column:mer_id"`
	// 销量
	Sales int64 `protobuf:"varint,31,opt,name=sales,proto3" json:"sales,omitempty" swaggerignore:"true" gorm:"-"` // @gotags:  swaggerignore:"true" gorm:"-"`
	// 是否热卖
	IsHot int64 `protobuf:"varint,32,opt,name=isHot,proto3" json:"isHot,omitempty" swaggerignore:"true" gorm:"<-;column:is_host"` // @gotags: `swaggerignore:"true" gorm:"<-;column:is_host"`
	// 是否优惠
	IsBenefit int64 `protobuf:"varint,33,opt,name=isBenefit,proto3" json:"isBenefit,omitempty" gorm:"<-;column:is_benefit"` // @gotags: gorm:"<-;column:is_benefit"`
	// 是否精品
	IsBest int64 `protobuf:"varint,34,opt,name=isBest,proto3" json:"isBest,omitempty" gorm:"<-;column:is_best"` // @gotags: gorm:"<-;column:is_best"`
	// 是否新品
	IsNew int64 `protobuf:"varint,35,opt,name=isNew,proto3" json:"isNew,omitempty" gorm:"<-;column:is_new"` // @gotags: gorm:"<-;column:is_new"`
	// 商户是否代理(0:不可代理 1:可代理)
	MerUse int64 `protobuf:"varint,36,opt,name=merUse,proto3" json:"merUse,omitempty" gorm:"<-;column:mer_use"` // @gotags: gorm:"<-;column:mer_use"`
	// 获得积分
	GiveIntegral int64 `protobuf:"varint,37,opt,name=giveIntegral,proto3" json:"giveIntegral,omitempty" gorm:"<-;column:give_integral"` // @gotags: gorm:"<-;column:give_integral"`
	// 秒杀状态(0:未开启 1:已开启)
	IsSeckill int64 `protobuf:"varint,38,opt,name=isSeckill,proto3" json:"isSeckill,omitempty" gorm:"<-;column:is_seckill"` // @gotags: gorm:"<-;column:is_seckill"`
	// 砍价状态(0:未开启 1:开启)
	IsBargain int64 `protobuf:"varint,39,opt,name=isBargain,proto3" json:"isBargain,omitempty" gorm:"<-;column:is_bargain"` // @gotags: gorm:"<-;column:is_bargain"`
	// 是否优品推荐
	IsGood int64 `protobuf:"varint,40,opt,name=isGood,proto3" json:"isGood,omitempty" gorm:"<-;column:is_good"` // @gotags: gorm:"<-;column:is_good"`
	// 是否单独分佣
	IsSub int64 `protobuf:"varint,41,opt,name=isSub,proto3" json:"isSub,omitempty" gorm:"<-;column:is_sub"` // @gotags: gorm:"<-;column:is_sub"`
	// 是否开启会员价格
	IsVip int64 `protobuf:"varint,42,opt,name=isVip,proto3" json:"isVip,omitempty" gorm:"<-;column:is_vip"` // @gotags: gorm:"<-;column:is_vip"`
	// 商品二维码地址(用户小程序海报)
	CodePath string `protobuf:"bytes,43,opt,name=codePath,proto3" json:"codePath,omitempty" gorm:"<-;column:code_path"` // @gotags: gorm:"<-;column:code_path"`
	// 主图视频链接
	VideoLink string `protobuf:"bytes,44,opt,name=videoLink,proto3" json:"videoLink,omitempty" gorm:"<-;column:video_link"` // @gotags: gorm:"<-;column:video_link"`
	// 活动显示排序1=秒杀，2=砍价，3=拼团
	Activity string `protobuf:"bytes,45,opt,name=activity,proto3" json:"activity,omitempty" gorm:"<-;column:activity"` // @gotags: gorm:"<-;column:activity"`
	// 标签ID
	LabelId string `protobuf:"bytes,46,opt,name=labelId,proto3" json:"labelId,omitempty" gorm:"<-;column:label_id"` // @gotags: gorm:"<-;column:label_id"`
	// 复制口令
	CommandWord string `protobuf:"bytes,47,opt,name=commandWord,proto3" json:"commandWord,omitempty" gorm:"<-;column:command_word"` // @gotags: gorm:"<-;column:command_word"`
	// 推荐商品id
	RecommendList string `protobuf:"bytes,48,opt,name=recommendList,proto3" json:"recommendList,omitempty" gorm:"<-;column:recommend_list"` // @gotags: gorm:"<-;column:recommend_list"`
	// 是否会员专属商品
	VipProduct int64 `protobuf:"varint,49,opt,name=vipProduct,proto3" json:"vipProduct,omitempty" gorm:"<-;column:vip_product"` // @gotags: gorm:"<-;column:vip_product"`
	// 是否预售商品
	Presale int64 `protobuf:"varint,50,opt,name=presale,proto3" json:"presale,omitempty" gorm:"<-;column:presale"` // @gotags: gorm:"<-;column:presale"`
	// 预售开始时间
	PresaleStartTime string `protobuf:"bytes,51,opt,name=presaleStartTime,proto3" json:"presaleStartTime,omitempty" gorm:"-;column:presale_start_time"` // @gotags: gorm:"-;column:presale_start_time"`
	// 预售结束时间
	PresaleEndTime string `protobuf:"bytes,52,opt,name=presaleEndTime,proto3" json:"presaleEndTime,omitempty" gorm:"-;column:presale_end_time"` // @gotags: gorm:"-;column:presale_end_time"`
	// 预售结束后几天内发货
	PresaleDay int64 `protobuf:"varint,53,opt,name=presaleDay,proto3" json:"presaleDay,omitempty" gorm:"<-;column:presale_day"` // @gotags: gorm:"<-;column:presale_day"`
	// 物流方式
	Logistics string `protobuf:"bytes,54,opt,name=logistics,proto3" json:"logistics,omitempty" gorm:"<-;column:logistics"` // @gotags: gorm:"<-;column:logistics"`
	// 运费设置
	Freight int64 `protobuf:"varint,55,opt,name=freight,proto3" json:"freight,omitempty" gorm:"<-;column:freight"` // @gotags: gorm:"<-;column:freight"`
	// 自定义表单
	CustomForm string `protobuf:"bytes,56,opt,name=customForm,proto3" json:"customForm,omitempty" gorm:"<-;column:custom_form"` // @gotags: gorm:"<-;column:custom_form"`
	// 排序
	SortBy int64 `protobuf:"varint,57,opt,name=sortBy,proto3" json:"sortBy,omitempty" gorm:"<-;column:sort_by"` // @gotags:  gorm:"<-;column:sort_by"`
	// 删除状态
	DelStatus bool `protobuf:"varint,58,opt,name=delStatus,proto3" json:"delStatus,omitempty" gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"` // @gotags: `gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"`
	// 创建人
	CreateBy string `protobuf:"bytes,59,opt,name=createBy,proto3" json:"createBy,omitempty" gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: `gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"`
	// 修改人
	UpdateBy string `protobuf:"bytes,60,opt,name=updateBy,proto3" json:"updateBy,omitempty" gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: `gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"`
	// 创建时间
	CreateTime string `protobuf:"bytes,61,opt,name=createTime,proto3" json:"createTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: `gorm:"->" swaggerignore:"true"`
	// 修改时间
	UpdateTime string `protobuf:"bytes,62,opt,name=updateTime,proto3" json:"updateTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: `gorm:"->" swaggerignore:"true"`
}

func (x *ProductListVo) Reset() {
	*x = ProductListVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListVo) ProtoMessage() {}

func (x *ProductListVo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListVo.ProtoReflect.Descriptor instead.
func (*ProductListVo) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{0}
}

func (x *ProductListVo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductListVo) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *ProductListVo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductListVo) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ProductListVo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *ProductListVo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductListVo) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductListVo) GetVipPrice() float64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ProductListVo) GetMarketPrice() float64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *ProductListVo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductListVo) GetSliderImage() string {
	if x != nil {
		return x.SliderImage
	}
	return ""
}

func (x *ProductListVo) GetRecommendImage() string {
	if x != nil {
		return x.RecommendImage
	}
	return ""
}

func (x *ProductListVo) GetStock() uint64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductListVo) GetStockWarning() uint64 {
	if x != nil {
		return x.StockWarning
	}
	return 0
}

func (x *ProductListVo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *ProductListVo) GetFreightTempId() string {
	if x != nil {
		return x.FreightTempId
	}
	return ""
}

func (x *ProductListVo) GetSpecType() int64 {
	if x != nil {
		return x.SpecType
	}
	return 0
}

func (x *ProductListVo) GetIsDisplay() int64 {
	if x != nil {
		return x.IsDisplay
	}
	return 0
}

func (x *ProductListVo) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *ProductListVo) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *ProductListVo) GetVirtualType() int64 {
	if x != nil {
		return x.VirtualType
	}
	return 0
}

func (x *ProductListVo) GetVirtualSales() int64 {
	if x != nil {
		return x.VirtualSales
	}
	return 0
}

func (x *ProductListVo) GetIsLimit() int64 {
	if x != nil {
		return x.IsLimit
	}
	return 0
}

func (x *ProductListVo) GetLimitType() int64 {
	if x != nil {
		return x.LimitType
	}
	return 0
}

func (x *ProductListVo) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *ProductListVo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProductListVo) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ProductListVo) GetViews() int64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ProductListVo) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductListVo) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *ProductListVo) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductListVo) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *ProductListVo) GetIsBenefit() int64 {
	if x != nil {
		return x.IsBenefit
	}
	return 0
}

func (x *ProductListVo) GetIsBest() int64 {
	if x != nil {
		return x.IsBest
	}
	return 0
}

func (x *ProductListVo) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *ProductListVo) GetMerUse() int64 {
	if x != nil {
		return x.MerUse
	}
	return 0
}

func (x *ProductListVo) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *ProductListVo) GetIsSeckill() int64 {
	if x != nil {
		return x.IsSeckill
	}
	return 0
}

func (x *ProductListVo) GetIsBargain() int64 {
	if x != nil {
		return x.IsBargain
	}
	return 0
}

func (x *ProductListVo) GetIsGood() int64 {
	if x != nil {
		return x.IsGood
	}
	return 0
}

func (x *ProductListVo) GetIsSub() int64 {
	if x != nil {
		return x.IsSub
	}
	return 0
}

func (x *ProductListVo) GetIsVip() int64 {
	if x != nil {
		return x.IsVip
	}
	return 0
}

func (x *ProductListVo) GetCodePath() string {
	if x != nil {
		return x.CodePath
	}
	return ""
}

func (x *ProductListVo) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *ProductListVo) GetActivity() string {
	if x != nil {
		return x.Activity
	}
	return ""
}

func (x *ProductListVo) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *ProductListVo) GetCommandWord() string {
	if x != nil {
		return x.CommandWord
	}
	return ""
}

func (x *ProductListVo) GetRecommendList() string {
	if x != nil {
		return x.RecommendList
	}
	return ""
}

func (x *ProductListVo) GetVipProduct() int64 {
	if x != nil {
		return x.VipProduct
	}
	return 0
}

func (x *ProductListVo) GetPresale() int64 {
	if x != nil {
		return x.Presale
	}
	return 0
}

func (x *ProductListVo) GetPresaleStartTime() string {
	if x != nil {
		return x.PresaleStartTime
	}
	return ""
}

func (x *ProductListVo) GetPresaleEndTime() string {
	if x != nil {
		return x.PresaleEndTime
	}
	return ""
}

func (x *ProductListVo) GetPresaleDay() int64 {
	if x != nil {
		return x.PresaleDay
	}
	return 0
}

func (x *ProductListVo) GetLogistics() string {
	if x != nil {
		return x.Logistics
	}
	return ""
}

func (x *ProductListVo) GetFreight() int64 {
	if x != nil {
		return x.Freight
	}
	return 0
}

func (x *ProductListVo) GetCustomForm() string {
	if x != nil {
		return x.CustomForm
	}
	return ""
}

func (x *ProductListVo) GetSortBy() int64 {
	if x != nil {
		return x.SortBy
	}
	return 0
}

func (x *ProductListVo) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *ProductListVo) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ProductListVo) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ProductListVo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductListVo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ProductDetaiVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品id
	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	// 分类id
	CategoryId string `protobuf:"bytes,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	// 商品名称
	ProductName string `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
	// 关键字
	Keyword string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 商品简介
	Introduction string `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty"`
	// 商品价格(单规格时必填)
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	// 成本价(单规格时必填)
	CostPrice float64 `protobuf:"fixed64,7,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	// 会员价格(单规格时必填)
	VipPrice float64 `protobuf:"fixed64,8,opt,name=vipPrice,proto3" json:"vipPrice,omitempty"`
	// 市场价(单规格时必填)
	MarketPrice float64 `protobuf:"fixed64,9,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	// 商品图片
	Image string `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	// 轮播图
	SliderImage string `protobuf:"bytes,11,opt,name=sliderImage,proto3" json:"sliderImage,omitempty"`
	// 推荐图
	RecommendImage string `protobuf:"bytes,12,opt,name=recommendImage,proto3" json:"recommendImage,omitempty"`
	// 库存
	Stock uint64 `protobuf:"varint,13,opt,name=stock,proto3" json:"stock,omitempty"`
	// 库存预警
	StockWarning uint64 `protobuf:"varint,14,opt,name=stockWarning,proto3" json:"stockWarning,omitempty"`
	// 单位
	UnitName string `protobuf:"bytes,15,opt,name=unitName,proto3" json:"unitName,omitempty"`
	// 运费模板ID
	TempId string `protobuf:"bytes,16,opt,name=tempId,proto3" json:"tempId,omitempty"`
	// 规格(0:单 1:多)
	SpecType int64 `protobuf:"varint,17,opt,name=specType,proto3" json:"specType,omitempty"`
	// 上架状态（0：未上架，1：上架）
	IsDisplay int64 `protobuf:"varint,18,opt,name=isDisplay,proto3" json:"isDisplay,omitempty"`
	// 商品是否是虚拟商品
	IsVirtual int64 `protobuf:"varint,19,opt,name=isVirtual,proto3" json:"isVirtual,omitempty"`
	// 品牌id
	BrandId string `protobuf:"bytes,20,opt,name=brandId,proto3" json:"brandId,omitempty"`
	// 虚拟商品类型
	VirtualType int64 `protobuf:"varint,21,opt,name=virtualType,proto3" json:"virtualType,omitempty"`
	// 虚拟销量
	VirtualSales int64 `protobuf:"varint,22,opt,name=virtualSales,proto3" json:"virtualSales,omitempty"`
	// 是否开启限购
	IsLimit int64 `protobuf:"varint,23,opt,name=isLimit,proto3" json:"isLimit,omitempty"`
	// 限购类型(1:单次限购 2:永久限购)
	LimitType int64 `protobuf:"varint,24,opt,name=limitType,proto3" json:"limitType,omitempty"`
	// 限购数量
	LimitNum int64 `protobuf:"varint,25,opt,name=limitNum,proto3" json:"limitNum,omitempty"`
	// 商品详情
	Content string `protobuf:"bytes,26,opt,name=content,proto3" json:"content,omitempty"`
	// 商品唯一编号
	Sn string `protobuf:"bytes,27,opt,name=sn,proto3" json:"sn,omitempty"`
	// 浏览量
	Views int64 `protobuf:"varint,28,opt,name=views,proto3" json:"views,omitempty"`
	// 商品条码（条形码）
	BarCode string `protobuf:"bytes,29,opt,name=barCode,proto3" json:"barCode,omitempty"`
	// 商户id(0为超级员创建 非0时为商户)
	MerId int64 `protobuf:"varint,30,opt,name=merId,proto3" json:"merId,omitempty"`
	// 销量
	Sales int64 `protobuf:"varint,31,opt,name=sales,proto3" json:"sales,omitempty"`
	// 是否热卖
	IsHot int64 `protobuf:"varint,32,opt,name=isHot,proto3" json:"isHot,omitempty"`
	// 是否优惠
	IsBenefit int64 `protobuf:"varint,33,opt,name=isBenefit,proto3" json:"isBenefit,omitempty"`
	// 是否精品
	IsBest int64 `protobuf:"varint,34,opt,name=isBest,proto3" json:"isBest,omitempty"`
	// 是否新品
	IsNew int64 `protobuf:"varint,35,opt,name=isNew,proto3" json:"isNew,omitempty"`
	// 商户是否代理(0:不可代理 1:可代理)
	MerUse int64 `protobuf:"varint,36,opt,name=merUse,proto3" json:"merUse,omitempty"`
	// 获得积分
	GiveIntegral int64 `protobuf:"varint,37,opt,name=giveIntegral,proto3" json:"giveIntegral,omitempty"`
	// 秒杀状态(0:未开启 1:已开启)
	IsSeckill int64 `protobuf:"varint,38,opt,name=isSeckill,proto3" json:"isSeckill,omitempty"`
	// 砍价状态(0:未开启 1:开启)
	IsBargain int64 `protobuf:"varint,39,opt,name=isBargain,proto3" json:"isBargain,omitempty"`
	// 是否优品推荐
	IsGood int64 `protobuf:"varint,40,opt,name=isGood,proto3" json:"isGood,omitempty"`
	// 是否单独分佣
	IsSub int64 `protobuf:"varint,41,opt,name=isSub,proto3" json:"isSub,omitempty"`
	// 是否开启会员价格
	IsVip int64 `protobuf:"varint,42,opt,name=isVip,proto3" json:"isVip,omitempty"`
	// 商品二维码地址(用户小程序海报)
	CodePath string `protobuf:"bytes,43,opt,name=codePath,proto3" json:"codePath,omitempty"`
	// 主图视频链接
	VideoLink string `protobuf:"bytes,44,opt,name=videoLink,proto3" json:"videoLink,omitempty"`
	// 活动显示排序1=秒杀，2=砍价，3=拼团
	Activity string `protobuf:"bytes,45,opt,name=activity,proto3" json:"activity,omitempty"`
	// 标签ID
	LabelId string `protobuf:"bytes,46,opt,name=labelId,proto3" json:"labelId,omitempty"`
	// 复制口令
	CommandWord string `protobuf:"bytes,47,opt,name=commandWord,proto3" json:"commandWord,omitempty"`
	// 推荐商品id
	RecommendList string `protobuf:"bytes,48,opt,name=recommendList,proto3" json:"recommendList,omitempty"`
	// 是否会员专属商品
	VipProduct int64 `protobuf:"varint,49,opt,name=vipProduct,proto3" json:"vipProduct,omitempty"`
	// 是否预售商品
	Presale int64 `protobuf:"varint,50,opt,name=presale,proto3" json:"presale,omitempty"`
	// 预售开始时间
	PresaleStartTime string `protobuf:"bytes,51,opt,name=presaleStartTime,proto3" json:"presaleStartTime,omitempty"`
	// 预售结束时间
	PresaleEndTime string `protobuf:"bytes,52,opt,name=presaleEndTime,proto3" json:"presaleEndTime,omitempty"`
	// 预售结束后几天内发货
	PresaleDay int64 `protobuf:"varint,53,opt,name=presaleDay,proto3" json:"presaleDay,omitempty"`
	// 物流方式
	Logistics string `protobuf:"bytes,54,opt,name=logistics,proto3" json:"logistics,omitempty"`
	// 运费设置
	Freight int64 `protobuf:"varint,55,opt,name=freight,proto3" json:"freight,omitempty"`
	// 自定义表单
	CustomForm string `protobuf:"bytes,56,opt,name=customForm,proto3" json:"customForm,omitempty"`
	// 排序
	SortBy int64 `protobuf:"varint,57,opt,name=sortBy,proto3" json:"sortBy,omitempty"`
	// 删除状态
	DelStatus bool `protobuf:"varint,58,opt,name=delStatus,proto3" json:"delStatus,omitempty"`
	// 创建人
	CreateBy string `protobuf:"bytes,59,opt,name=createBy,proto3" json:"createBy,omitempty"`
	// 修改人
	UpdateBy string `protobuf:"bytes,60,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,61,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 修改时间
	UpdateTime string `protobuf:"bytes,62,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	// 商品sku
	SkuList []*ProductDetaiVo_ProductSku `protobuf:"bytes,63,rep,name=skuList,proto3" json:"skuList" gorm:"-"` // @gotags: `json:"skuList" gorm:"-" `
}

func (x *ProductDetaiVo) Reset() {
	*x = ProductDetaiVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetaiVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetaiVo) ProtoMessage() {}

func (x *ProductDetaiVo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetaiVo.ProtoReflect.Descriptor instead.
func (*ProductDetaiVo) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductDetaiVo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductDetaiVo) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *ProductDetaiVo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductDetaiVo) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ProductDetaiVo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *ProductDetaiVo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductDetaiVo) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductDetaiVo) GetVipPrice() float64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ProductDetaiVo) GetMarketPrice() float64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *ProductDetaiVo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductDetaiVo) GetSliderImage() string {
	if x != nil {
		return x.SliderImage
	}
	return ""
}

func (x *ProductDetaiVo) GetRecommendImage() string {
	if x != nil {
		return x.RecommendImage
	}
	return ""
}

func (x *ProductDetaiVo) GetStock() uint64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductDetaiVo) GetStockWarning() uint64 {
	if x != nil {
		return x.StockWarning
	}
	return 0
}

func (x *ProductDetaiVo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *ProductDetaiVo) GetTempId() string {
	if x != nil {
		return x.TempId
	}
	return ""
}

func (x *ProductDetaiVo) GetSpecType() int64 {
	if x != nil {
		return x.SpecType
	}
	return 0
}

func (x *ProductDetaiVo) GetIsDisplay() int64 {
	if x != nil {
		return x.IsDisplay
	}
	return 0
}

func (x *ProductDetaiVo) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *ProductDetaiVo) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *ProductDetaiVo) GetVirtualType() int64 {
	if x != nil {
		return x.VirtualType
	}
	return 0
}

func (x *ProductDetaiVo) GetVirtualSales() int64 {
	if x != nil {
		return x.VirtualSales
	}
	return 0
}

func (x *ProductDetaiVo) GetIsLimit() int64 {
	if x != nil {
		return x.IsLimit
	}
	return 0
}

func (x *ProductDetaiVo) GetLimitType() int64 {
	if x != nil {
		return x.LimitType
	}
	return 0
}

func (x *ProductDetaiVo) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *ProductDetaiVo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProductDetaiVo) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ProductDetaiVo) GetViews() int64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ProductDetaiVo) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductDetaiVo) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *ProductDetaiVo) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductDetaiVo) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *ProductDetaiVo) GetIsBenefit() int64 {
	if x != nil {
		return x.IsBenefit
	}
	return 0
}

func (x *ProductDetaiVo) GetIsBest() int64 {
	if x != nil {
		return x.IsBest
	}
	return 0
}

func (x *ProductDetaiVo) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *ProductDetaiVo) GetMerUse() int64 {
	if x != nil {
		return x.MerUse
	}
	return 0
}

func (x *ProductDetaiVo) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *ProductDetaiVo) GetIsSeckill() int64 {
	if x != nil {
		return x.IsSeckill
	}
	return 0
}

func (x *ProductDetaiVo) GetIsBargain() int64 {
	if x != nil {
		return x.IsBargain
	}
	return 0
}

func (x *ProductDetaiVo) GetIsGood() int64 {
	if x != nil {
		return x.IsGood
	}
	return 0
}

func (x *ProductDetaiVo) GetIsSub() int64 {
	if x != nil {
		return x.IsSub
	}
	return 0
}

func (x *ProductDetaiVo) GetIsVip() int64 {
	if x != nil {
		return x.IsVip
	}
	return 0
}

func (x *ProductDetaiVo) GetCodePath() string {
	if x != nil {
		return x.CodePath
	}
	return ""
}

func (x *ProductDetaiVo) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *ProductDetaiVo) GetActivity() string {
	if x != nil {
		return x.Activity
	}
	return ""
}

func (x *ProductDetaiVo) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *ProductDetaiVo) GetCommandWord() string {
	if x != nil {
		return x.CommandWord
	}
	return ""
}

func (x *ProductDetaiVo) GetRecommendList() string {
	if x != nil {
		return x.RecommendList
	}
	return ""
}

func (x *ProductDetaiVo) GetVipProduct() int64 {
	if x != nil {
		return x.VipProduct
	}
	return 0
}

func (x *ProductDetaiVo) GetPresale() int64 {
	if x != nil {
		return x.Presale
	}
	return 0
}

func (x *ProductDetaiVo) GetPresaleStartTime() string {
	if x != nil {
		return x.PresaleStartTime
	}
	return ""
}

func (x *ProductDetaiVo) GetPresaleEndTime() string {
	if x != nil {
		return x.PresaleEndTime
	}
	return ""
}

func (x *ProductDetaiVo) GetPresaleDay() int64 {
	if x != nil {
		return x.PresaleDay
	}
	return 0
}

func (x *ProductDetaiVo) GetLogistics() string {
	if x != nil {
		return x.Logistics
	}
	return ""
}

func (x *ProductDetaiVo) GetFreight() int64 {
	if x != nil {
		return x.Freight
	}
	return 0
}

func (x *ProductDetaiVo) GetCustomForm() string {
	if x != nil {
		return x.CustomForm
	}
	return ""
}

func (x *ProductDetaiVo) GetSortBy() int64 {
	if x != nil {
		return x.SortBy
	}
	return 0
}

func (x *ProductDetaiVo) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *ProductDetaiVo) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ProductDetaiVo) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ProductDetaiVo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductDetaiVo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ProductDetaiVo) GetSkuList() []*ProductDetaiVo_ProductSku {
	if x != nil {
		return x.SkuList
	}
	return nil
}

// ProductIds 产品id
type ProductIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIds []string `protobuf:"bytes,1,rep,name=ProductIds,proto3" json:"ProductIds,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ProductIds) Reset() {
	*x = ProductIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductIds) ProtoMessage() {}

func (x *ProductIds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductIds.ProtoReflect.Descriptor instead.
func (*ProductIds) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductIds) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

func (x *ProductIds) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ProductParamIds 产品
type ProductParamIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*global.ProductParam `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *ProductParamIds) Reset() {
	*x = ProductParamIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductParamIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductParamIds) ProtoMessage() {}

func (x *ProductParamIds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductParamIds.ProtoReflect.Descriptor instead.
func (*ProductParamIds) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductParamIds) GetParams() []*global.ProductParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品参数列表
	AddressId string `protobuf:"bytes,1,opt,name=AddressId,proto3" json:"AddressId,omitempty" validate:"required"` // @gotags: validate:"required"
	// 商品参数列表
	ProductList []*global.ProductParam `protobuf:"bytes,2,rep,name=productList,proto3" json:"productList,omitempty" validate:"required"` // @gotags: validate:"required"
	// 支付类型 1:直接支付 2:余额支付
	PayType int64 `protobuf:"varint,3,opt,name=payType,proto3" json:"payType,omitempty" validate:"required" minimum:"1" maximum:"2" default:"1"` // @gotags: validate:"required" minimum:"1" maximum:"2" default:"1"
	// 交易类型(1:微信 2:支付宝)
	TradeType int64 `protobuf:"varint,4,opt,name=tradeType,proto3" json:"tradeType,omitempty" validate:"required" minimum:"1" maximum:"2" default:"1"` // @gotags: validate:"required" minimum:"1" maximum:"2" default:"1"
}

func (x *CreateOrderParams) Reset() {
	*x = CreateOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderParams) ProtoMessage() {}

func (x *CreateOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderParams.ProtoReflect.Descriptor instead.
func (*CreateOrderParams) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOrderParams) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

func (x *CreateOrderParams) GetProductList() []*global.ProductParam {
	if x != nil {
		return x.ProductList
	}
	return nil
}

func (x *CreateOrderParams) GetPayType() int64 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *CreateOrderParams) GetTradeType() int64 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

type ProductPageAuthQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页索引
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 分页长度
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 查询参数
	Params *ProductPageAuthQuery_QueryParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// 用户登录授权信息
	Auth *global.Auth `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty" swaggerignore:"true"` // @gotags: swaggerignore:"true"`
}

func (x *ProductPageAuthQuery) Reset() {
	*x = ProductPageAuthQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPageAuthQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPageAuthQuery) ProtoMessage() {}

func (x *ProductPageAuthQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPageAuthQuery.ProtoReflect.Descriptor instead.
func (*ProductPageAuthQuery) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{5}
}

func (x *ProductPageAuthQuery) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ProductPageAuthQuery) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductPageAuthQuery) GetParams() *ProductPageAuthQuery_QueryParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ProductPageAuthQuery) GetAuth() *global.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 结果返回
type ProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据量
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 错误信息
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// 详情
	Detail *ProductDetaiVo `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	// 商品扩展列表
	ExpandList []*global.ProductExpand `protobuf:"bytes,4,rep,name=expandList,proto3" json:"expandList,omitempty"`
	// 商品分页列表
	List []*ProductListVo `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductResponse) Reset() {
	*x = ProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductResponse) ProtoMessage() {}

func (x *ProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductResponse.ProtoReflect.Descriptor instead.
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductResponse) GetDetail() *ProductDetaiVo {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *ProductResponse) GetExpandList() []*global.ProductExpand {
	if x != nil {
		return x.ExpandList
	}
	return nil
}

func (x *ProductResponse) GetList() []*ProductListVo {
	if x != nil {
		return x.List
	}
	return nil
}

// 多规格Sku
type ProductDetaiVo_ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 规格id
	SkuId        string `protobuf:"bytes,1,opt,name=skuId,proto3" json:"skuId,omitempty"`
	ProductId    string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	SukName      string `protobuf:"bytes,3,opt,name=sukName,proto3" json:"sukName,omitempty"`
	Sales        string `protobuf:"bytes,4,opt,name=sales,proto3" json:"sales,omitempty"`
	Price        string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	CostPrice    string `protobuf:"bytes,6,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	VipPrice     string `protobuf:"bytes,7,opt,name=vipPrice,proto3" json:"vipPrice,omitempty"`
	MarketPrice  string `protobuf:"bytes,8,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	Image        string `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
	Sn           string `protobuf:"bytes,10,opt,name=sn,proto3" json:"sn,omitempty"`
	Stock        string `protobuf:"bytes,11,opt,name=stock,proto3" json:"stock,omitempty"`
	StockWarning string `protobuf:"bytes,12,opt,name=stockWarning,proto3" json:"stockWarning,omitempty"`
	BarCode      string `protobuf:"bytes,13,opt,name=barCode,proto3" json:"barCode,omitempty"`
	Weight       string `protobuf:"bytes,14,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume       string `protobuf:"bytes,15,opt,name=volume,proto3" json:"volume,omitempty"`
	Type         string `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	Quota        string `protobuf:"bytes,17,opt,name=quota,proto3" json:"quota,omitempty"`
	QuotaShow    string `protobuf:"bytes,18,opt,name=quotaShow,proto3" json:"quotaShow,omitempty"`
	CouponId     string `protobuf:"bytes,19,opt,name=couponId,proto3" json:"couponId,omitempty"`
	Brokerage    string `protobuf:"bytes,20,opt,name=brokerage,proto3" json:"brokerage,omitempty"`
	BrokerageTwo string `protobuf:"bytes,21,opt,name=brokerageTwo,proto3" json:"brokerageTwo,omitempty"`
}

func (x *ProductDetaiVo_ProductSku) Reset() {
	*x = ProductDetaiVo_ProductSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetaiVo_ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetaiVo_ProductSku) ProtoMessage() {}

func (x *ProductDetaiVo_ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetaiVo_ProductSku.ProtoReflect.Descriptor instead.
func (*ProductDetaiVo_ProductSku) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ProductDetaiVo_ProductSku) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetSukName() string {
	if x != nil {
		return x.SukName
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetSales() string {
	if x != nil {
		return x.Sales
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetCostPrice() string {
	if x != nil {
		return x.CostPrice
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetVipPrice() string {
	if x != nil {
		return x.VipPrice
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetMarketPrice() string {
	if x != nil {
		return x.MarketPrice
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetStock() string {
	if x != nil {
		return x.Stock
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetStockWarning() string {
	if x != nil {
		return x.StockWarning
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetQuota() string {
	if x != nil {
		return x.Quota
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetQuotaShow() string {
	if x != nil {
		return x.QuotaShow
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetBrokerage() string {
	if x != nil {
		return x.Brokerage
	}
	return ""
}

func (x *ProductDetaiVo_ProductSku) GetBrokerageTwo() string {
	if x != nil {
		return x.BrokerageTwo
	}
	return ""
}

// 查询调教
type ProductPageAuthQuery_QueryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品名称
	ProductName string `protobuf:"bytes,1,opt,name=productName,proto3" json:"productName,omitempty"`
	// 关键词
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ProductPageAuthQuery_QueryParams) Reset() {
	*x = ProductPageAuthQuery_QueryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_client_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPageAuthQuery_QueryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPageAuthQuery_QueryParams) ProtoMessage() {}

func (x *ProductPageAuthQuery_QueryParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_client_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPageAuthQuery_QueryParams.ProtoReflect.Descriptor instead.
func (*ProductPageAuthQuery_QueryParams) Descriptor() ([]byte, []int) {
	return file_protos_shopping_client_product_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ProductPageAuthQuery_QueryParams) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductPageAuthQuery_QueryParams) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

var File_protos_shopping_client_product_proto protoreflect.FileDescriptor

var file_protos_shopping_client_product_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x0e, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x48,
	0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x72, 0x55, 0x73, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x65, 0x72, 0x55, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x53, 0x75, 0x62, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x73, 0x53, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x6e, 0x6b, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73,
	0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x18, 0x39, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xfe, 0x12, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x56, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x65, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48,
	0x6f, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x73, 0x42, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x53, 0x75, 0x62, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x53, 0x75,
	0x62, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46,
	0x6f, 0x72, 0x6d, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x3f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x56, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0xb2, 0x04, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x70,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x77, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x22, 0x44, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x73,
	0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x49, 0x0a, 0x0b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x56, 0x6f, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xe8, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0x19, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x73, 0x68, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_shopping_client_product_proto_rawDescOnce sync.Once
	file_protos_shopping_client_product_proto_rawDescData = file_protos_shopping_client_product_proto_rawDesc
)

func file_protos_shopping_client_product_proto_rawDescGZIP() []byte {
	file_protos_shopping_client_product_proto_rawDescOnce.Do(func() {
		file_protos_shopping_client_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_shopping_client_product_proto_rawDescData)
	})
	return file_protos_shopping_client_product_proto_rawDescData
}

var file_protos_shopping_client_product_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protos_shopping_client_product_proto_goTypes = []interface{}{
	(*ProductListVo)(nil),                    // 0: shopping.ProductListVo
	(*ProductDetaiVo)(nil),                   // 1: shopping.ProductDetaiVo
	(*ProductIds)(nil),                       // 2: shopping.ProductIds
	(*ProductParamIds)(nil),                  // 3: shopping.ProductParamIds
	(*CreateOrderParams)(nil),                // 4: shopping.CreateOrderParams
	(*ProductPageAuthQuery)(nil),             // 5: shopping.ProductPageAuthQuery
	(*ProductResponse)(nil),                  // 6: shopping.ProductResponse
	(*ProductDetaiVo_ProductSku)(nil),        // 7: shopping.ProductDetaiVo.ProductSku
	(*ProductPageAuthQuery_QueryParams)(nil), // 8: shopping.ProductPageAuthQuery.QueryParams
	(*global.ProductParam)(nil),              // 9: global.ProductParam
	(*global.Auth)(nil),                      // 10: global.Auth
	(*global.ProductExpand)(nil),             // 11: global.ProductExpand
}
var file_protos_shopping_client_product_proto_depIdxs = []int32{
	7,  // 0: shopping.ProductDetaiVo.skuList:type_name -> shopping.ProductDetaiVo.ProductSku
	9,  // 1: shopping.ProductParamIds.params:type_name -> global.ProductParam
	9,  // 2: shopping.CreateOrderParams.productList:type_name -> global.ProductParam
	8,  // 3: shopping.ProductPageAuthQuery.params:type_name -> shopping.ProductPageAuthQuery.QueryParams
	10, // 4: shopping.ProductPageAuthQuery.auth:type_name -> global.Auth
	1,  // 5: shopping.ProductResponse.detail:type_name -> shopping.ProductDetaiVo
	11, // 6: shopping.ProductResponse.expandList:type_name -> global.ProductExpand
	0,  // 7: shopping.ProductResponse.list:type_name -> shopping.ProductListVo
	2,  // 8: shopping.ProductService.FindById:input_type -> shopping.ProductIds
	5,  // 9: shopping.ProductService.FindPageList:input_type -> shopping.ProductPageAuthQuery
	4,  // 10: shopping.ProductService.FindListByProductIds:input_type -> shopping.CreateOrderParams
	6,  // 11: shopping.ProductService.FindById:output_type -> shopping.ProductResponse
	6,  // 12: shopping.ProductService.FindPageList:output_type -> shopping.ProductResponse
	6,  // 13: shopping.ProductService.FindListByProductIds:output_type -> shopping.ProductResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protos_shopping_client_product_proto_init() }
func file_protos_shopping_client_product_proto_init() {
	if File_protos_shopping_client_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_shopping_client_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetaiVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductParamIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPageAuthQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetaiVo_ProductSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_client_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPageAuthQuery_QueryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_shopping_client_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_shopping_client_product_proto_goTypes,
		DependencyIndexes: file_protos_shopping_client_product_proto_depIdxs,
		MessageInfos:      file_protos_shopping_client_product_proto_msgTypes,
	}.Build()
	File_protos_shopping_client_product_proto = out.File
	file_protos_shopping_client_product_proto_rawDesc = nil
	file_protos_shopping_client_product_proto_goTypes = nil
	file_protos_shopping_client_product_proto_depIdxs = nil
}
