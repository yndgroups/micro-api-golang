// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: protos/shopping_admin/product_sku.proto

package shopping_admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	global "protobuf/build/global"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主键id
	SkuId string `protobuf:"bytes,1,opt,name=skuId,proto3" json:"skuId,omitempty" gorm:"primary_key;<-:create"` // @gotags: gorm:"primary_key;<-:create"
	// 商品ID
	ProductId string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品sku名称
	SukName string `protobuf:"bytes,3,opt,name=sukName,proto3" json:"sukName,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 属性对应的库存
	Stock int64 `protobuf:"varint,4,opt,name=stock,proto3" json:"stock,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 销量
	Sales int64 `protobuf:"varint,5,opt,name=sales,proto3" json:"sales,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 属性金额
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 图片
	Image string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品编码
	Sn string `protobuf:"bytes,8,opt,name=sn,proto3" json:"sn,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 成本价
	Cost float64 `protobuf:"fixed64,9,opt,name=cost,proto3" json:"cost,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品条码
	BarCode string `protobuf:"bytes,10,opt,name=barCode,proto3" json:"barCode,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 市场价
	MarketPrice float64 `protobuf:"fixed64,11,opt,name=marketPrice,proto3" json:"marketPrice,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 会员专享价
	VipPrice float64 `protobuf:"fixed64,12,opt,name=vipPrice,proto3" json:"vipPrice,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 重量
	Weight float64 `protobuf:"fixed64,13,opt,name=weight,proto3" json:"weight,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 体积
	Volume float64 `protobuf:"fixed64,14,opt,name=volume,proto3" json:"volume,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 一级返佣
	Brokerage float64 `protobuf:"fixed64,15,opt,name=brokerage,proto3" json:"brokerage,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 二级返佣
	BrokerageTwo float64 `protobuf:"fixed64,16,opt,name=brokerageTwo,proto3" json:"brokerageTwo,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动类型 (0:商品 1:秒杀 2:砍价 3:拼团)
	Type int64 `protobuf:"varint,17,opt,name=type,proto3" json:"type,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动限购数量
	Quota int64 `protobuf:"varint,18,opt,name=quota,proto3" json:"quota,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动限购数量显示
	QuotaShow int64 `protobuf:"varint,19,opt,name=quotaShow,proto3" json:"quotaShow,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 优惠券id
	CouponId string `protobuf:"bytes,20,opt,name=couponId,proto3" json:"couponId,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 删除状态
	DelStatus bool `protobuf:"varint,21,opt,name=delStatus,proto3" json:"delStatus,omitempty" gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"` // @gotags: gorm:"-" swaggerignore:"true" minimum:"0" maximum:"1" default:"0"
	// 创建人
	CreateBy string `protobuf:"bytes,22,opt,name=createBy,proto3" json:"createBy,omitempty" gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:create" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 修改人
	UpdateBy string `protobuf:"bytes,23,opt,name=updateBy,proto3" json:"updateBy,omitempty" gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"` // @gotags: gorm:"->;<-:update" swaggerignore:"true" minLength:"6" maxLength:"19"
	// 创建时间
	CreateTime string `protobuf:"bytes,24,opt,name=createTime,proto3" json:"createTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
	// 修改时间
	UpdateTime string `protobuf:"bytes,25,opt,name=updateTime,proto3" json:"updateTime,omitempty" gorm:"->" swaggerignore:"true"` // @gotags: gorm:"->" swaggerignore:"true"
}

func (x *ProductSku) Reset() {
	*x = ProductSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSku) ProtoMessage() {}

func (x *ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSku.ProtoReflect.Descriptor instead.
func (*ProductSku) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{0}
}

func (x *ProductSku) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *ProductSku) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductSku) GetSukName() string {
	if x != nil {
		return x.SukName
	}
	return ""
}

func (x *ProductSku) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSku) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductSku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductSku) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductSku) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ProductSku) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ProductSku) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductSku) GetMarketPrice() float64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *ProductSku) GetVipPrice() float64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ProductSku) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductSku) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ProductSku) GetBrokerage() float64 {
	if x != nil {
		return x.Brokerage
	}
	return 0
}

func (x *ProductSku) GetBrokerageTwo() float64 {
	if x != nil {
		return x.BrokerageTwo
	}
	return 0
}

func (x *ProductSku) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProductSku) GetQuota() int64 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *ProductSku) GetQuotaShow() int64 {
	if x != nil {
		return x.QuotaShow
	}
	return 0
}

func (x *ProductSku) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

func (x *ProductSku) GetDelStatus() bool {
	if x != nil {
		return x.DelStatus
	}
	return false
}

func (x *ProductSku) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ProductSku) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ProductSku) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductSku) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ProductSkuListVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主键id
	SkuId string `protobuf:"bytes,1,opt,name=skuId,proto3" json:"skuId,omitempty" gorm:"primary_key;<-:create"` // @gotags: gorm:"primary_key;<-:create"
	// 商品ID
	ProductId string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品sku名称
	SukName string `protobuf:"bytes,3,opt,name=sukName,proto3" json:"sukName,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 属性对应的库存
	Stock int64 `protobuf:"varint,4,opt,name=stock,proto3" json:"stock,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 销量
	Sales int64 `protobuf:"varint,5,opt,name=sales,proto3" json:"sales,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 属性金额
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 图片
	Image string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品编码
	Sn string `protobuf:"bytes,8,opt,name=sn,proto3" json:"sn,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 成本价
	Cost float64 `protobuf:"fixed64,9,opt,name=cost,proto3" json:"cost,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 商品条码
	BarCode string `protobuf:"bytes,10,opt,name=barCode,proto3" json:"barCode,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 市场价
	MarketPrice float64 `protobuf:"fixed64,11,opt,name=marketPrice,proto3" json:"marketPrice,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 会员专享价
	VipPrice float64 `protobuf:"fixed64,12,opt,name=vipPrice,proto3" json:"vipPrice,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 重量
	Weight float64 `protobuf:"fixed64,13,opt,name=weight,proto3" json:"weight,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 体积
	Volume float64 `protobuf:"fixed64,14,opt,name=volume,proto3" json:"volume,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 一级返佣
	Brokerage float64 `protobuf:"fixed64,15,opt,name=brokerage,proto3" json:"brokerage,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 二级返佣
	BrokerageTwo float64 `protobuf:"fixed64,16,opt,name=brokerageTwo,proto3" json:"brokerageTwo,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动类型 (0:商品 1:秒杀 2:砍价 3:拼团)
	Type int64 `protobuf:"varint,17,opt,name=type,proto3" json:"type,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动限购数量
	Quota int64 `protobuf:"varint,18,opt,name=quota,proto3" json:"quota,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 活动限购数量显示
	QuotaShow int64 `protobuf:"varint,19,opt,name=quotaShow,proto3" json:"quotaShow,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
	// 优惠券id
	CouponId string `protobuf:"bytes,20,opt,name=couponId,proto3" json:"couponId,omitempty" gorm:"<-"` // @gotags: gorm:"<-"
}

func (x *ProductSkuListVo) Reset() {
	*x = ProductSkuListVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuListVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuListVo) ProtoMessage() {}

func (x *ProductSkuListVo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuListVo.ProtoReflect.Descriptor instead.
func (*ProductSkuListVo) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{1}
}

func (x *ProductSkuListVo) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *ProductSkuListVo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductSkuListVo) GetSukName() string {
	if x != nil {
		return x.SukName
	}
	return ""
}

func (x *ProductSkuListVo) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSkuListVo) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductSkuListVo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductSkuListVo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductSkuListVo) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ProductSkuListVo) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ProductSkuListVo) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductSkuListVo) GetMarketPrice() float64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *ProductSkuListVo) GetVipPrice() float64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ProductSkuListVo) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductSkuListVo) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ProductSkuListVo) GetBrokerage() float64 {
	if x != nil {
		return x.Brokerage
	}
	return 0
}

func (x *ProductSkuListVo) GetBrokerageTwo() float64 {
	if x != nil {
		return x.BrokerageTwo
	}
	return 0
}

func (x *ProductSkuListVo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProductSkuListVo) GetQuota() int64 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *ProductSkuListVo) GetQuotaShow() int64 {
	if x != nil {
		return x.QuotaShow
	}
	return 0
}

func (x *ProductSkuListVo) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

type ProductSkuParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProductSkuParam) Reset() {
	*x = ProductSkuParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuParam) ProtoMessage() {}

func (x *ProductSkuParam) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuParam.ProtoReflect.Descriptor instead.
func (*ProductSkuParam) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{2}
}

type ProductSkuIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ProductSkuIds) Reset() {
	*x = ProductSkuIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuIds) ProtoMessage() {}

func (x *ProductSkuIds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuIds.ProtoReflect.Descriptor instead.
func (*ProductSkuIds) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{3}
}

func (x *ProductSkuIds) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductSkuIds) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 分页查询加权参数
type ProductSkuPageAuthQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页索引
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 分页长度
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 查询参数
	Params *ProductSkuParam `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// 用户登录授权信息
	Auth *global.Auth `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty" swaggerignore:"true"` // @gotags: swaggerignore:"true"
}

func (x *ProductSkuPageAuthQuery) Reset() {
	*x = ProductSkuPageAuthQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuPageAuthQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuPageAuthQuery) ProtoMessage() {}

func (x *ProductSkuPageAuthQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuPageAuthQuery.ProtoReflect.Descriptor instead.
func (*ProductSkuPageAuthQuery) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{4}
}

func (x *ProductSkuPageAuthQuery) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ProductSkuPageAuthQuery) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductSkuPageAuthQuery) GetParams() *ProductSkuParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ProductSkuPageAuthQuery) GetAuth() *global.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 返回结果
type ProductSkuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int64         `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`  // 获取数据数量
	Msg    string        `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`       // 错误信息
	Detail *ProductSku   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"` // 详情
	List   []*ProductSku `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`     // 列表
}

func (x *ProductSkuResponse) Reset() {
	*x = ProductSkuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuResponse) ProtoMessage() {}

func (x *ProductSkuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_shopping_admin_product_sku_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuResponse.ProtoReflect.Descriptor instead.
func (*ProductSkuResponse) Descriptor() ([]byte, []int) {
	return file_protos_shopping_admin_product_sku_proto_rawDescGZIP(), []int{5}
}

func (x *ProductSkuResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductSkuResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductSkuResponse) GetDetail() *ProductSku {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *ProductSkuResponse) GetList() []*ProductSku {
	if x != nil {
		return x.List
	}
	return nil
}

var File_protos_shopping_admin_product_sku_proto protoreflect.FileDescriptor

var file_protos_shopping_admin_product_sku_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x05, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x69,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x54, 0x77, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8a, 0x04, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x68,
	0x6f, 0x77, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x11, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x37, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x49, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xa0, 0x01, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32,
	0xa0, 0x03, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x1a, 0x22, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x73, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64,
	0x73, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x50, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x22,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_shopping_admin_product_sku_proto_rawDescOnce sync.Once
	file_protos_shopping_admin_product_sku_proto_rawDescData = file_protos_shopping_admin_product_sku_proto_rawDesc
)

func file_protos_shopping_admin_product_sku_proto_rawDescGZIP() []byte {
	file_protos_shopping_admin_product_sku_proto_rawDescOnce.Do(func() {
		file_protos_shopping_admin_product_sku_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_shopping_admin_product_sku_proto_rawDescData)
	})
	return file_protos_shopping_admin_product_sku_proto_rawDescData
}

var file_protos_shopping_admin_product_sku_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_shopping_admin_product_sku_proto_goTypes = []interface{}{
	(*ProductSku)(nil),              // 0: shopping_admin.ProductSku
	(*ProductSkuListVo)(nil),        // 1: shopping_admin.ProductSkuListVo
	(*ProductSkuParam)(nil),         // 2: shopping_admin.ProductSkuParam
	(*ProductSkuIds)(nil),           // 3: shopping_admin.ProductSkuIds
	(*ProductSkuPageAuthQuery)(nil), // 4: shopping_admin.ProductSkuPageAuthQuery
	(*ProductSkuResponse)(nil),      // 5: shopping_admin.ProductSkuResponse
	(*global.Auth)(nil),             // 6: global.Auth
}
var file_protos_shopping_admin_product_sku_proto_depIdxs = []int32{
	2, // 0: shopping_admin.ProductSkuPageAuthQuery.params:type_name -> shopping_admin.ProductSkuParam
	6, // 1: shopping_admin.ProductSkuPageAuthQuery.auth:type_name -> global.Auth
	0, // 2: shopping_admin.ProductSkuResponse.detail:type_name -> shopping_admin.ProductSku
	0, // 3: shopping_admin.ProductSkuResponse.list:type_name -> shopping_admin.ProductSku
	0, // 4: shopping_admin.ProductSkuService.Create:input_type -> shopping_admin.ProductSku
	0, // 5: shopping_admin.ProductSkuService.Update:input_type -> shopping_admin.ProductSku
	3, // 6: shopping_admin.ProductSkuService.Delete:input_type -> shopping_admin.ProductSkuIds
	3, // 7: shopping_admin.ProductSkuService.FindById:input_type -> shopping_admin.ProductSkuIds
	4, // 8: shopping_admin.ProductSkuService.FindPageList:input_type -> shopping_admin.ProductSkuPageAuthQuery
	5, // 9: shopping_admin.ProductSkuService.Create:output_type -> shopping_admin.ProductSkuResponse
	5, // 10: shopping_admin.ProductSkuService.Update:output_type -> shopping_admin.ProductSkuResponse
	5, // 11: shopping_admin.ProductSkuService.Delete:output_type -> shopping_admin.ProductSkuResponse
	5, // 12: shopping_admin.ProductSkuService.FindById:output_type -> shopping_admin.ProductSkuResponse
	5, // 13: shopping_admin.ProductSkuService.FindPageList:output_type -> shopping_admin.ProductSkuResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protos_shopping_admin_product_sku_proto_init() }
func file_protos_shopping_admin_product_sku_proto_init() {
	if File_protos_shopping_admin_product_sku_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_shopping_admin_product_sku_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_admin_product_sku_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuListVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_admin_product_sku_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_admin_product_sku_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_admin_product_sku_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuPageAuthQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_shopping_admin_product_sku_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_shopping_admin_product_sku_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_shopping_admin_product_sku_proto_goTypes,
		DependencyIndexes: file_protos_shopping_admin_product_sku_proto_depIdxs,
		MessageInfos:      file_protos_shopping_admin_product_sku_proto_msgTypes,
	}.Build()
	File_protos_shopping_admin_product_sku_proto = out.File
	file_protos_shopping_admin_product_sku_proto_rawDesc = nil
	file_protos_shopping_admin_product_sku_proto_goTypes = nil
	file_protos_shopping_admin_product_sku_proto_depIdxs = nil
}
